import type React from 'react';
import { PureComponent } from 'react';
export declare type CSSTransitionGroupProps = React.PropsWithChildren<{
    animateFirstRender?: boolean;
    transitionName: {
        enter?: string;
        leave?: string;
        show?: string;
        hide?: string;
    };
}>;
declare type CSSTransitionGroupState = React.PropsWithChildren<{
    transitionClass: CSSTransitionGroupProps['children'] | null;
}>;
declare class CSSTransitionGroup extends PureComponent<CSSTransitionGroupProps, CSSTransitionGroupState> {
    updateStatus: (transitionClass?: React.ReactNode, children?: React.ReactNode) => void;
    constructor(props: CSSTransitionGroupProps);
    static defaultProps: {
        children: null;
        transitionName: {};
        animateFirstRender: boolean;
    };
    componentDidMount(): void;
    componentDidUpdate(prevProps: CSSTransitionGroupProps): void;
    handleTransitionEnd: () => void;
    render(): React.CElement<{
        className: string;
        style: any;
        children: any;
        onTransitionEnd: () => void;
    }, React.Component<{
        className: string;
        style: any;
        children: any;
        onTransitionEnd: () => void;
    }, any, any>> | null;
}
export default CSSTransitionGroup;
