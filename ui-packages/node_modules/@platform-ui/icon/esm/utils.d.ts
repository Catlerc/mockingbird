import React from 'react';
import type { IconProps, IconContainerProps } from './Icon';
export declare type IconType = IconProps['icon'];
export declare type StaticDefaultProps = Partial<Pick<IconProps, 'iconSize' | 'backgroundSize' | 'withContainer' | 'theme' | 'svgCode'>>;
export declare type IconClassProps = React.HTMLAttributes<HTMLElement> & Pick<IconProps, 'dataQaType' | 'theme' | 'containerSize' | 'dataSvgId' | 'reverse' | 'rotate' | 'verticalAlign' | 'iconSize' | 'withContainer' | 'cursor' | 'square'>;
export declare function getIconClass<T = IconClassProps>(icon: IconType, staticDefaultProps?: StaticDefaultProps): (props: T) => JSX.Element;
export declare const getInterface16IconClass: (icon: IconType, { withContainer }?: Pick<StaticDefaultProps, 'withContainer'>) => (props: Omit<IconClassProps, "iconSize">) => JSX.Element;
export declare const getInterface24IconClass: (icon: IconType, { withContainer }?: Pick<StaticDefaultProps, 'withContainer'>) => (props: Omit<IconClassProps, "iconSize">) => JSX.Element;
export declare const getPaymentSystemIconClass: (icon: IconType) => (props: Omit<IconClassProps, "containerSize" | "iconSize" | "withContainer">) => JSX.Element;
export declare const getSubscriptionsClass: (icon: IconType) => (props: Omit<IconClassProps, "containerSize" | "iconSize" | "withContainer">) => JSX.Element;
export declare type ProprietaryIconContainerProps = Omit<IconContainerProps, 'svgCode' | 'withContainer' | 'iconSize'> & {
    iconSize: React.CSSProperties['width'];
};
export declare type ProprietarySquareIconContainerProps = Omit<IconContainerProps, 'svgCode'>;
export declare function getIconContainer<T extends ProprietaryIconContainerProps>(svgCode: IconContainerProps['svgCode'], defaults: ProprietaryIconContainerProps, horizontal?: boolean): (props: T) => JSX.Element;
export declare function getSquareIconContainer<T extends ProprietarySquareIconContainerProps>(svgCode: IconContainerProps['svgCode'], defaultProps?: Omit<IconContainerProps, 'svgCode'>): (props: T) => JSX.Element;
export declare type FlagContainerProps = Omit<IconContainerProps, 'withContainer' | 'theme' | 'containerSize' | 'backgroundSize'>;
export declare const getFlagContainer: (svgCode: string) => (props: FlagContainerProps) => JSX.Element;
export declare type IllustrationContainerProps = Omit<IconContainerProps, 'withContainer' | 'theme' | 'containerSize' | 'backgroundSize'> & Pick<ProprietaryIconContainerProps, 'iconSize'>;
export declare const getIllustrationContainer: (svgCode: string) => (props: IllustrationContainerProps) => JSX.Element;
export declare type LogoSquareContainerProps = Omit<IconContainerProps, 'withContainer' | 'theme' | 'containerSize' | 'backgroundSize'>;
export declare const getLogoSquareContainer: (svgCode: string) => (props: LogoSquareContainerProps) => JSX.Element;
export declare type LogoContainerProps = Omit<IconContainerProps, 'withContainer' | 'theme' | 'containerSize' | 'backgroundSize'> & Pick<ProprietaryIconContainerProps, 'iconSize'>;
export declare const getLogoContainer: (svgCode: string) => (props: LogoContainerProps) => JSX.Element;
export declare type MediumContainerProps = Omit<IconContainerProps, 'svgCode'>;
export declare const getMediumContainer: (svgCode: string) => (props: MediumContainerProps) => JSX.Element;
export declare type SmallContainerProps = Omit<IconContainerProps, 'svgCode'>;
export declare const getSmallContainer: (svgCode: string) => (props: SmallContainerProps) => JSX.Element;
