"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

exports.__esModule = true;
exports.InputCountStateless = InputCountStateless;
exports.default = void 0;

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _stateUtils = require("@platform-ui/stateUtils");

var _inputBox = _interopRequireDefault(require("@platform-ui/inputBox"));

var _inputTools = require("@platform-ui/inputTools");

var corners = _interopRequireWildcard(require("@platform-ui/flatCorners"));

var _clickable = _interopRequireDefault(require("@platform-ui/clickable"));

var _InputCountModule = _interopRequireDefault(require("./InputCount.module.css"));

var _excluded = ["label", "error", "required", "hintBlock", "flatCorners", "onStepButtonClick", "size", "showButtons", "dataQaType", "min", "max", "step", "precision"];

function InputCountStateless(props) {
  var _cn2;

  var label = props.label,
      error = props.error,
      required = props.required,
      hintBlock = props.hintBlock,
      _props$flatCorners = props.flatCorners,
      flatCorners = _props$flatCorners === void 0 ? '' : _props$flatCorners,
      onStepButtonClick = props.onStepButtonClick,
      size = props.size,
      _props$showButtons = props.showButtons,
      showButtons = _props$showButtons === void 0 ? true : _props$showButtons,
      _props$dataQaType = props.dataQaType,
      dataQaType = _props$dataQaType === void 0 ? 'uikit/inputCount' : _props$dataQaType,
      _props$min = props.min,
      min = _props$min === void 0 ? -(Math.pow(2, 53) - 1) : _props$min,
      _props$max = props.max,
      max = _props$max === void 0 ? Math.pow(2, 53) - 1 : _props$max,
      _props$step = props.step,
      step = _props$step === void 0 ? 1 : _props$step,
      _props$precision = props.precision,
      precision = _props$precision === void 0 ? 0 : _props$precision,
      inputProps = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
  var inputCorners = corners.toBooleanArray(flatCorners);

  var handleButtonClick = function handleButtonClick(event) {
    var name = props.name,
        onChange = props.onChange;
    var sign = event.currentTarget.dataset.sign;
    var value = (0, _inputTools.addStep)(props.value, {
      min: min,
      max: max,
      step: step,
      precision: precision
    }, sign === 'plus' ? 1 : -1);
    onStepButtonClick && onStepButtonClick(event, {
      name: name,
      sign: sign,
      value: value
    });
    onChange && onChange(event, {
      name: name,
      value: value
    });
  };

  var renderButton = function renderButton(sign, ariaLabel) {
    var _cn;

    var value = props.value,
        disabled = props.disabled,
        readOnly = props.readOnly;
    var buttonDisabled = disabled || readOnly || !(0, _inputTools.canAddStep)(value, {
      min: min,
      max: max,
      step: step,
      precision: precision
    }, sign === 'plus' ? 1 : -1);
    return /*#__PURE__*/_react.default.createElement(_clickable.default, {
      dataQaType: dataQaType + ".button-" + sign,
      role: "button",
      "data-sign": sign,
      "aria-label": ariaLabel,
      "aria-disabled": buttonDisabled ? true : undefined,
      className: (0, _classnames.default)((_cn = {}, _cn[_InputCountModule.default.button] = true, _cn[_InputCountModule.default["button_sign_" + sign]] = true, _cn[_InputCountModule.default.button_disabled] = buttonDisabled, _cn)),
      onClick: !buttonDisabled ? handleButtonClick : undefined
    });
  };

  if (showButtons) {
    inputCorners[1] = showButtons;
    inputCorners[2] = showButtons;
  }

  return /*#__PURE__*/_react.default.createElement(_inputTools.FocusArea, {
    className: (0, _classnames.default)((_cn2 = {}, _cn2[_InputCountModule.default.root] = true, _cn2[_InputCountModule.default.root_showButtons] = showButtons, _cn2)),
    "data-qa-type": dataQaType,
    style: corners.style(flatCorners)
  }, /*#__PURE__*/_react.default.createElement(_inputBox.default, {
    dataQaType: dataQaType + ".wrapper",
    flatCorners: inputCorners.join(' '),
    label: label,
    error: error,
    filled: inputProps.filled || !(0, _inputTools.isEmptyValue)(inputProps.value),
    focused: inputProps.focused,
    readOnly: inputProps.readOnly,
    disabled: inputProps.disabled,
    required: required,
    hintBlock: hintBlock,
    size: size,
    labelFor: inputProps.id
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _InputCountModule.default.inputContainer
  }, /*#__PURE__*/_react.default.createElement(_inputTools.UnitsInput, Object.assign({
    dataQaType: dataQaType,
    min: min,
    max: max,
    step: step,
    precision: precision
  }, inputProps))), "\u200B"
  /* пробел нулевой ширины чтобы растянуть родителя по высоте до line-height */
  ), showButtons && /*#__PURE__*/_react.default.createElement(_react.Fragment, null, renderButton('plus', 'Плюс'), renderButton('minus', 'Минус')));
}

var InputCount = (0, _stateUtils.withValueInputState)(InputCountStateless, {
  emptyValue: 0
});
var _default = InputCount;
exports.default = _default;