"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

exports.__esModule = true;
exports.deprecateProps = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _debug = _interopRequireDefault(require("debug"));

var _map = _interopRequireDefault(require("@tinkoff/utils/object/map"));

var _reduce = _interopRequireDefault(require("@tinkoff/utils/object/reduce"));

var log = (0, _debug.default)('Tinkoff::errors::deprecated');
var setDefaults = (0, _map.default)(function (deprecation) {
  return (0, _extends2.default)({
    check: function check(props, propName) {
      return props[propName] !== undefined;
    },
    transform: function transform(props) {
      return props;
    },
    message: function message(props, propName, componentName) {
      return "'" + propName + " prop of '" + componentName + "' is deprecated'";
    }
  }, deprecation);
});

var deprecateProps = function deprecateProps(options) {
  var deprecations = setDefaults(options);
  return function (WrappedComponent) {
    var withDeprecatedProps = function withDeprecatedProps(originProps) {
      var props = (0, _reduce.default)(function (prop, _ref, propName) {
        var check = _ref.check,
            transform = _ref.transform,
            message = _ref.message;

        if (!check(prop, propName)) {
          return prop;
        }

        log(message(prop, propName, WrappedComponent.displayName));
        return transform(prop, propName);
      }, originProps, deprecations);
      return /*#__PURE__*/_react.default.createElement(WrappedComponent, props);
    };

    withDeprecatedProps.displayName = "DeprecateProps(" + Object.keys(deprecations).join(', ') + ")(" + (WrappedComponent.displayName || WrappedComponent.name || 'Component(!)') + ")";
    process.env.NODE_ENV !== "production" ? withDeprecatedProps.propTypes = WrappedComponent.propTypes : void 0;
    withDeprecatedProps.defaultProps = WrappedComponent.defaultProps;
    return withDeprecatedProps;
  };
};

exports.deprecateProps = deprecateProps;