"use strict";

exports.__esModule = true;
exports.onRectChange = onRectChange;

function rectChanged(prevRect, nextRect) {
  if (!prevRect) {
    return !!nextRect;
  }

  if (!nextRect) {
    return true;
  }

  return Object.keys(prevRect).some(function (field) {
    return nextRect[field] !== prevRect[field];
  });
}

function onRectChange(getRect, onChange) {
  var prevRect = getRect();

  var handler = function handler() {
    var nextRect = getRect();

    if (rectChanged(prevRect, nextRect)) {
      prevRect = nextRect;
      onChange(nextRect);
    }
  };

  var mutationObserver = new MutationObserver(handler);
  mutationObserver.observe(document.body, {
    subtree: true,
    childList: true,
    attributes: true,
    characterData: true
  });
  document.body.addEventListener('transitionend', handler);
  document.body.addEventListener('animationend', handler);
  window.addEventListener('resize', handler);
  onChange(prevRect);
  return function () {
    mutationObserver.disconnect();
    document.body.removeEventListener('transitionend', handler);
    document.body.removeEventListener('animationend', handler);
    window.removeEventListener('resize', handler);
  };
}