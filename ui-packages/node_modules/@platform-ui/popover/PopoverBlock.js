"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

exports.__esModule = true;
exports.default = void 0;

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _dataQa = _interopRequireDefault(require("@platform-ui/dataQa"));

var _PopoverModule = _interopRequireDefault(require("./Popover.module.css"));

var _excluded = ["animated", "popoverBlock", "direction", "increasedTouchZone", "refCallback", "opened", "animationDisabled", "dataQaType"];

var PopoverBlock = function PopoverBlock(props) {
  var _cn;

  var animated = props.animated,
      popoverBlock = props.popoverBlock,
      direction = props.direction,
      increasedTouchZone = props.increasedTouchZone,
      refCallback = props.refCallback,
      opened = props.opened,
      animationDisabled = props.animationDisabled,
      dataQaType = props.dataQaType,
      otherProps = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);

  var _useState = (0, _react.useState)(false),
      mounted = _useState[0],
      setMounted = _useState[1];

  var handleAnimationEnd = function handleAnimationEnd() {
    return setMounted(false);
  };

  (0, _react.useEffect)(function () {
    var withoutAnimation = animationDisabled || !animated;

    if (opened) {
      setMounted(true);
    }

    if (!opened && withoutAnimation) {
      setMounted(false);
    }
  }, [opened, animated, animationDisabled]);
  return mounted ? /*#__PURE__*/_react.default.createElement("div", Object.assign({}, otherProps, (0, _dataQa.default)({
    dataQaType: dataQaType
  }), {
    ref: refCallback,
    className: (0, _classnames.default)((_cn = {}, _cn[_PopoverModule.default.container] = true, _cn[_PopoverModule.default.container_animated] = animated, _cn[_PopoverModule.default["container_direction_" + direction]] = direction, _cn[_PopoverModule.default.container_increasedTouchZone] = increasedTouchZone, _cn[_PopoverModule.default.container_open] = opened && direction, _cn[_PopoverModule.default.container_close] = !opened && direction, _cn)),
    onAnimationEnd: !opened ? handleAnimationEnd : undefined
  }), popoverBlock) : null;
};

var _default = PopoverBlock;
exports.default = _default;