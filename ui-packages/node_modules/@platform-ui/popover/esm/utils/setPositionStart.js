const maxOffsetTooltip = (shift, offset, size, parentSize = 0) => {
  const sign = shift >= 0 ? 1 : -1;
  const limitPlus = sign * (parentSize - offset);
  const limitMinus = sign * (size - offset);
  return shift >= 0 ? Math.min(limitPlus, shift) : Math.max(limitMinus, shift);
};

const maxOffsetArrow = (shift, offset, size, parentSize = 0) => {
  const sign = shift >= 0 ? 1 : -1;
  const limitPlus = sign * (parentSize / 2 - offset);
  const limitMinus = sign * (size - parentSize / 2 - offset);
  return shift >= 0 ? Math.min(limitPlus, shift) : Math.max(limitMinus, shift);
};

const setHorizontal = ({
  childrenRect,
  popoverRect,
  direction,
  additionalShift,
  customPadding,
  minArrowOffset,
  containerOffsets
}) => ({
  tooltipStyle: {
    top: childrenRect.top + maxOffsetTooltip(additionalShift, minArrowOffset, popoverRect.height, childrenRect.height) + containerOffsets.top,
    left: direction === 'right' ? childrenRect.right + customPadding + containerOffsets.left : childrenRect.left - popoverRect.width - customPadding + containerOffsets.left
  },
  cornerStyle: {
    top: childrenRect.height / 2 - maxOffsetArrow(additionalShift, minArrowOffset, popoverRect.height, childrenRect.height)
  }
});

const setVertical = ({
  childrenRect,
  containerRect,
  popoverRect,
  direction,
  additionalShift,
  customPadding,
  windowMargin,
  minArrowOffset,
  containerOffsets
}) => {
  const tooltipStyle = {
    top: direction === 'bottom' ? childrenRect.bottom + customPadding + containerOffsets.top : childrenRect.top - popoverRect.height - customPadding + containerOffsets.top,
    left: childrenRect.left + maxOffsetTooltip(additionalShift, minArrowOffset, popoverRect.width, childrenRect.width) + containerOffsets.left
  };
  const arrowLeft = childrenRect.width / 2;
  const cornerStyle = {
    left: arrowLeft - maxOffsetArrow(additionalShift, minArrowOffset, popoverRect.width, childrenRect.width)
  }; // не даем вылезти тултипу за экран

  const right = containerRect.width - (childrenRect.left + popoverRect.width + maxOffsetTooltip(additionalShift, minArrowOffset, popoverRect.width, childrenRect.width));
  const realWindowMargin = Math.min(windowMargin, containerRect.width - childrenRect.right);

  if (right < realWindowMargin) {
    tooltipStyle.left = containerRect.width - popoverRect.width - realWindowMargin;
    cornerStyle.marginLeft = -right + realWindowMargin;
  }

  return {
    tooltipStyle,
    cornerStyle
  };
};

export function setPositionStart(args) {
  switch (args.direction) {
    case 'left':
    case 'right':
      return setHorizontal(args);

    case 'top':
    case 'bottom':
      return setVertical(args);
  }
}