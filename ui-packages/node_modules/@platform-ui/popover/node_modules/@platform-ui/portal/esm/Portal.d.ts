import React from 'react';
export interface PortalProps extends React.HTMLAttributes<Element> {
    /**
     * Тег для элемента-заглушки (по-умолчанию div)
     * Также для него могут быть заданы любые DOM-атрибуты для нужд a11y или SEO
     */
    tagName?: keyof React.ReactDOM;
    /**
     * Позволяет явно указать, в какой контейнер отрендерить портал
     * Возможные значения:
     *  * HTMLElement - явно указать элемент, в который рендерить
     *  * string - значение атрибута `data-portal-root`, в который нужно отрендерить
     *  * 'body' - специальное строковое значение, говорящее о том, что нужно отрендерить в body
     */
    to?: string;
    /**
     *  Позволяет переносить контент в <body>
     *  @deprecated используйте `to='body'`
     */
    toBody?: boolean;
    /**
     * Позволяет пререндерить содержимое при SSR
     */
    prerender?: boolean;
    /**
     * Содержимое для рендеринга в портале
     */
    children?: React.ReactNode;
    /**
     * ref на элемент, в который будем рендерить
     */
    exitRef?: React.Ref<Element>;
}
declare const Portal: (props: PortalProps) => JSX.Element;
export default Portal;
