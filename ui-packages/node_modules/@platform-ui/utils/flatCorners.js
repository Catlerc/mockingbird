"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

exports.__esModule = true;
exports.toBooleanArray = exports.style = exports.propType = exports.deprecateDecorator = exports.defaultProp = void 0;

var _extends3 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _deprecatePropsHOC = _interopRequireDefault(require("@platform-ui/deprecatePropsHOC"));

var _excluded = ["flatCorners"];

var propType = function propType(props, propName, componentName) {
  var value = props[propName];

  if (value !== null && value !== undefined && !(typeof value === 'string' && value.match(/^((true|false)( |$))*/g))) {
    throw new Error("Prop " + propName + " of " + componentName + " should be null or a string of 'true' and 'false' separated by spaces");
  }
};

exports.propType = propType;

propType.getType = function () {
  return 'string';
};

var defaultProp = '';
exports.defaultProp = defaultProp;

var cascadeBooleanProperty = function cascadeBooleanProperty(_temp) {
  var _ref = _temp === void 0 ? [] : _temp,
      _ref$ = _ref[0],
      top = _ref$ === void 0 ? false : _ref$,
      _ref$2 = _ref[1],
      right = _ref$2 === void 0 ? top : _ref$2,
      _ref$3 = _ref[2],
      bottom = _ref$3 === void 0 ? top : _ref$3,
      _ref$4 = _ref[3],
      left = _ref$4 === void 0 ? right : _ref$4;

  return [top, right, bottom, left];
};

var PROPERTIES = ['borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius'];
var deprecateDecorator = (0, _deprecatePropsHOC.default)({
  flatCorners: {
    check: function check(_ref2) {
      var flatCorners = _ref2.flatCorners;
      return Array.isArray(flatCorners);
    },
    transform: function transform(_ref3) {
      var flatCorners = _ref3.flatCorners,
          props = (0, _objectWithoutPropertiesLoose2.default)(_ref3, _excluded);
      return (0, _extends3.default)({}, props, {
        flatCorners: flatCorners.join(' ')
      });
    },
    message: function message(props, propName, componentName) {
      return "Array format of 'flatCorners' prop of '" + componentName + "' is deprecated.\n            Use string format instead (e.g. 'true true false false' instead of [true, true, false, false])";
    }
  }
});
/**
 * @deprecated Используйте @platform-ui/flatCorners
 */

exports.deprecateDecorator = deprecateDecorator;

var toBooleanArray = function toBooleanArray(value) {
  return cascadeBooleanProperty((value || '').split(' ').map(function (part) {
    return part === 'true';
  }));
};
/**
 * @deprecated Используйте @platform-ui/flatCorners
 */


exports.toBooleanArray = toBooleanArray;

var style = function style(value) {
  return toBooleanArray(value).reduce(function (s, flag, i) {
    var _extends2;

    return flag ? (0, _extends3.default)({}, s, (_extends2 = {}, _extends2[PROPERTIES[i]] = 0, _extends2)) : s;
  }, {});
};

exports.style = style;