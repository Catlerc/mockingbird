import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
const _excluded = ["flatCorners"];
import deprecateProps from '@platform-ui/deprecatePropsHOC';
export const propType = (props, propName, componentName) => {
  const value = props[propName];

  if (value !== null && value !== undefined && !(typeof value === 'string' && value.match(/^((true|false)( |$))*/g))) {
    throw new Error(`Prop ${propName} of ${componentName} should be null or a string of 'true' and 'false' separated by spaces`);
  }
};

propType.getType = () => 'string';

export const defaultProp = '';

const cascadeBooleanProperty = ([top = false, right = top, bottom = top, left = right] = []) => [top, right, bottom, left];

const PROPERTIES = ['borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius'];
export const deprecateDecorator = deprecateProps({
  flatCorners: {
    check: ({
      flatCorners
    }) => Array.isArray(flatCorners),
    transform: _ref => {
      let {
        flatCorners
      } = _ref,
          props = _objectWithoutPropertiesLoose(_ref, _excluded);

      return _extends({}, props, {
        flatCorners: flatCorners.join(' ')
      });
    },
    message: (props, propName, componentName) => `Array format of 'flatCorners' prop of '${componentName}' is deprecated.
            Use string format instead (e.g. 'true true false false' instead of [true, true, false, false])`
  }
});
/**
 * @deprecated Используйте @platform-ui/flatCorners
 */

export const toBooleanArray = value => cascadeBooleanProperty((value || '').split(' ').map(part => part === 'true'));
/**
 * @deprecated Используйте @platform-ui/flatCorners
 */

export const style = value => toBooleanArray(value).reduce((s, flag, i) => flag ? _extends({}, s, {
  [PROPERTIES[i]]: 0
}) : s, {});