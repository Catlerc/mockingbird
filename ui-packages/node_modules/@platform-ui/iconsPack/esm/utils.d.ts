import React from 'react';
import type { IconProps } from '@platform-ui/icon';
export declare type IconType = IconProps['icon'];
export declare type StaticDefaultProps = Partial<Pick<IconProps, 'iconSize' | 'backgroundSize' | 'withContainer' | 'theme'>>;
export declare type IconClassProps = React.HTMLAttributes<HTMLElement> & Pick<IconProps, 'dataQaType' | 'theme' | 'containerSize' | 'dataSvgId' | 'reverse' | 'rotate' | 'verticalAlign' | 'iconSize' | 'withContainer' | 'cursor'>;
export declare function getIconClass<T = IconClassProps>(icon: IconType, staticDefaultProps?: StaticDefaultProps): (props: T) => JSX.Element;
export declare const getInterface16IconClass: (icon: IconType, { withContainer }?: Pick<StaticDefaultProps, 'withContainer'>) => (props: Omit<IconClassProps, "iconSize">) => JSX.Element;
export declare const getInterface24IconClass: (icon: IconType, { withContainer }?: Pick<StaticDefaultProps, 'withContainer'>) => (props: Omit<IconClassProps, "iconSize">) => JSX.Element;
export declare const getPaymentSystemIconClass: (icon: IconType) => (props: Omit<IconClassProps, "containerSize" | "iconSize" | "withContainer">) => JSX.Element;
export declare const getSubscriptionsClass: (icon: IconType) => (props: Omit<IconClassProps, "containerSize" | "iconSize" | "withContainer">) => JSX.Element;
