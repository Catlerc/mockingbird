"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

exports.__esModule = true;
exports.default = exports.SIZES = exports.CHECKMARK_STYLES = void 0;

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _iconsPack = require("@platform-ui/iconsPack");

var _lazyRender = _interopRequireDefault(require("@platform-ui/lazyRender"));

var _overrideStyles = _interopRequireDefault(require("@platform-ui/overrideStyles"));

var _DropdownModule = _interopRequireDefault(require("./Dropdown.module.css"));

var SIZES = ['l', 'm', 's'];
exports.SIZES = SIZES;
var CHECKMARK_STYLES = ['default', 'checkbox'];
exports.CHECKMARK_STYLES = CHECKMARK_STYLES;

var DropdownItem = /*#__PURE__*/_react.default.memo(function (props) {
  var _cn, _cn2, _cn3, _cn4;

  var sizeProp = props.size,
      checkmarkStyle = props.checkmarkStyle,
      label = props.label,
      title = props.title,
      description = props.description,
      rightContent = props.rightContent,
      leftContent = props.leftContent,
      checkboxed = props.checkboxed,
      selected = props.selected,
      highlighted = props.highlighted,
      role = props.role,
      onMouseDown = props.onMouseDown,
      onMouseOver = props.onMouseOver,
      disabled = props.disabled,
      setRef = props.setRef,
      highlightMatch = props.highlightMatch,
      dropdownItemIndex = props.dropdownItemIndex,
      dataQaType = props.dataQaType,
      lazy = props.lazy,
      __overrideStyles = props.__overrideStyles,
      __parentOverrideStyles = props.__parentOverrideStyles;

  var getRealContent = function getRealContent(prop) {
    return typeof prop === 'function' ? prop(props) : prop;
  };

  var styles = __parentOverrideStyles || (0, _overrideStyles.default)(_DropdownModule.default, __overrideStyles == null ? void 0 : __overrideStyles.Dropdown);

  var size = sizeProp || (!!label || !!description ? 'l' : 'm');
  var realRightContent = getRealContent(rightContent);
  var realLeftContent = getRealContent(leftContent);
  var IconTag = size === 's' ? _iconsPack.Int16Tip : _iconsPack.Int24Tip;
  var showSubContent = size === 'l';

  var _ref = lazy ? [_lazyRender.default, {
    rootMargin: '100px 0px'
  }] : ['div', {}],
      Root = _ref[0],
      rootProps = _ref[1];

  return /*#__PURE__*/_react.default.createElement(Root, Object.assign({}, rootProps, {
    "data-qa-type": dataQaType,
    ref: setRef,
    className: (0, _classnames.default)((_cn = {}, _cn[styles.item] = true, _cn[styles["item_size_" + size]] = true, _cn[styles.item_selected] = selected, _cn[styles.item_disabled] = disabled, _cn[styles.item_highlighted] = highlighted, _cn[styles["item_checkmarkStyle_" + checkmarkStyle]] = checkboxed, _cn)),
    role: role,
    "aria-selected": checkboxed ? selected : undefined,
    "aria-disabled": disabled || undefined,
    "data-dropdown-item-index": dropdownItemIndex,
    onMouseDown: onMouseDown,
    onMouseOver: onMouseOver
  }), realLeftContent && /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)((_cn2 = {}, _cn2[styles.sideContent] = true, _cn2[styles.sideContent_left] = true, _cn2)),
    "data-qa-type": dataQaType + ".leftContent"
  }, realLeftContent), /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)((_cn3 = {}, _cn3[styles.content] = true, _cn3[styles.content_highlight] = highlightMatch, _cn3))
  }, showSubContent && label && /*#__PURE__*/_react.default.createElement("div", {
    className: styles.label,
    role: "heading",
    "aria-level": 4,
    "data-qa-type": dataQaType + ".label"
  }, label), title && /*#__PURE__*/_react.default.createElement("div", {
    className: styles.title,
    role: "heading",
    "aria-level": 3,
    "data-qa-type": dataQaType + ".title"
  }, title), showSubContent && description && /*#__PURE__*/_react.default.createElement("div", {
    className: styles.description,
    "aria-level": 5,
    "data-qa-type": dataQaType + ".description"
  }, description)), realRightContent && /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)((_cn4 = {}, _cn4[styles.sideContent] = true, _cn4[styles.sideContent_right] = true, _cn4)),
    "data-qa-type": dataQaType + ".rightContent"
  }, realRightContent), checkboxed && /*#__PURE__*/_react.default.createElement("div", {
    className: styles.checkmark
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: styles.checkmarkIcon,
    "data-qa-type": dataQaType + ".checkmarkIcon"
  }, /*#__PURE__*/_react.default.createElement(IconTag, null))));
});

DropdownItem.defaultProps = {
  checkmarkStyle: 'default',
  dataQaType: 'uikit/dropdown.item',
  selectable: true,
  role: 'option'
};
var _default = DropdownItem;
exports.default = _default;