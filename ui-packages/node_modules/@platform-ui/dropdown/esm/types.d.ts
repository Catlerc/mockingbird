import type React from 'react';
import type { DropdownItemProps } from './DropdownItem';
export declare type SimpleValue = string | number;
export declare type Value = SimpleValue[] | SimpleValue;
export declare type OptionObject = DropdownItemProps;
export declare type SingleOption = SimpleValue | OptionObject;
export declare type GroupOption = {
    title?: string;
    options: SingleOption[];
    size?: 'm' | 's';
    key?: string;
};
export declare function isGroupOption(option: Option): option is GroupOption;
export declare type Option = SingleOption | GroupOption;
export declare type Options = Option[];
export declare type OptionSelectHandler = (e: React.MouseEvent | React.KeyboardEvent | null, params: {
    value?: Value;
    option: SingleOption;
}) => void;
export declare type OptionMouseHandler = (e: React.MouseEvent, params: {
    value?: Value;
    option: SingleOption;
}) => void;
export declare type ObjectOption = {
    value: string | number;
    title?: React.ReactNode;
};
export declare type WithOptions<T extends ObjectOption> = T & {
    options?: T[];
};
export declare type FilterFunction<T extends string | ObjectOption> = (option: T, normalisedQuery: string, query: string, isHighLighted?: boolean) => T | boolean;
export declare type MouseEvent = (e: React.MouseEvent) => void;
export declare type KeyboardEvent = (e: React.KeyboardEvent) => void;
export declare type Size = 's' | 'm' | 'l';
export interface SizeProp {
    /**
     * Размер элемента
     */
    size?: Size;
}
