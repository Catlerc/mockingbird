import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
const _excluded = ["aria-describedby", "aria-errormessage", "autoComplete", "autoFocus", "cobrowsingSecure", "dataQaData", "dataQaType", "decimalSeparator", "digitGroupingSeparator", "disabled", "id", "max", "maxLength", "min", "name", "onBlur", "onChange", "onFocus", "onInput", "onKeyDown", "onKeyPress", "onKeyUp", "placeholder", "precision", "readOnly", "step", "tabIndex", "type", "value", "emptyValue", "currency", "focused"];
import React, { forwardRef } from 'react';
import { getNumberValue, UnitsInput } from '@platform-ui/inputTools';
import Money from './Money';
const Input = /*#__PURE__*/forwardRef((_ref, forwardedRef) => {
  let {
    'aria-describedby': ariaDescribedBy,
    'aria-errormessage': ariaErrorMessage,
    autoComplete,
    autoFocus,
    cobrowsingSecure,
    dataQaData,
    dataQaType = 'uikit/money',
    decimalSeparator = ',',
    digitGroupingSeparator = ' ',
    disabled,
    id,
    max,
    maxLength,
    min,
    name,
    onBlur,
    onChange,
    onFocus,
    onInput,
    onKeyDown,
    onKeyPress,
    onKeyUp,
    placeholder,
    precision,
    readOnly,
    step,
    tabIndex,
    type,
    value,
    emptyValue = 0,
    currency,
    focused
  } = _ref,
      otherProps = _objectWithoutPropertiesLoose(_ref, _excluded);

  const handleBlur = event => {
    onBlur == null ? void 0 : onBlur(event, {
      value,
      name
    });
  };

  const handleChange = (event, params) => {
    onChange == null ? void 0 : onChange(event, params);
  };

  const handleFocus = event => {
    onFocus == null ? void 0 : onFocus(event, {
      value,
      name
    });
  };

  return /*#__PURE__*/React.createElement(Money, Object.assign({}, otherProps, {
    currency: currency,
    dataQaData: dataQaData,
    dataQaType: dataQaType,
    decimalSeparator: decimalSeparator,
    digitGroupingSeparator: digitGroupingSeparator,
    precision: precision,
    showSmalls: false,
    styledSmalls: false,
    value: value
  }), /*#__PURE__*/React.createElement(UnitsInput, {
    "aria-describedby": ariaDescribedBy,
    "aria-errormessage": ariaErrorMessage,
    autoComplete: autoComplete,
    autoFocus: autoFocus,
    focused: focused,
    cobrowsingSecure: cobrowsingSecure,
    dataQaType: dataQaType,
    precision: precision,
    decimalSeparator: decimalSeparator,
    disabled: disabled,
    id: id,
    ref: forwardedRef,
    inputMode: "numeric",
    max: max,
    maxLength: maxLength,
    min: min,
    name: name,
    placeholder: placeholder,
    readOnly: readOnly,
    step: step,
    tabIndex: tabIndex,
    digitGroupingSeparator: digitGroupingSeparator,
    emptyValue: getNumberValue(emptyValue),
    type: type,
    value: getNumberValue(value),
    onBlur: handleBlur,
    onChange: handleChange,
    onFocus: handleFocus,
    onInput: onInput,
    onKeyDown: onKeyDown,
    onKeyPress: onKeyPress,
    onKeyUp: onKeyUp
  }));
});
export { Input };