"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _excluded = ["tagName", "children", "rootMargin"];
var LazyRender = /*#__PURE__*/(0, _react.forwardRef)(function (props, forwardedRef) {
  var _props$tagName = props.tagName,
      tagName = _props$tagName === void 0 ? 'div' : _props$tagName,
      children = props.children,
      rootMargin = props.rootMargin,
      rest = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);

  var _React$useState = _react.default.useState(false),
      rendered = _React$useState[0],
      setRendered = _React$useState[1];

  var rootRef = _react.default.useRef(null);

  var ref = _react.default.useCallback(function (el) {
    rootRef.current = el;

    if (!forwardedRef) {
      return;
    }

    if (typeof forwardedRef === 'function') {
      forwardedRef(el);
    } else {
      // eslint-disable-next-line no-param-reassign
      forwardedRef.current = el;
    }
  }, [forwardedRef]);

  _react.default.useEffect(function () {
    if (typeof IntersectionObserver === 'undefined') {
      setRendered(true);
      return;
    } // eslint-disable-next-line compat/compat


    var observer = new IntersectionObserver(function (entries) {
      var entry = entries[0];

      if (entry.isIntersecting) {
        setRendered(true);
        observer.disconnect();
      }
    }, {
      threshold: 0,
      rootMargin: rootMargin
    });
    rootRef.current && observer.observe(rootRef.current);
    return function () {
      observer.disconnect();
    };
  }, [rootMargin]);

  return /*#__PURE__*/_react.default.createElement(tagName, (0, _extends2.default)({}, rest, {
    ref: ref
  }), rendered ? children : null);
});
var _default = LazyRender;
exports.default = _default;