import React from 'react';
import type { DataQaInterface } from '@platform-ui/dataQa';
export interface CollapseBlockProps extends DataQaInterface {
    /**
     * Контент блока
     */
    children?: React.ReactNode;
    /**
     * Состояние компонента, "свернут/раскрыт" - true/false
     */
    collapsed?: boolean;
    /**
     * Удалять контент из DOM в свернутом состоянии
     */
    removeCollapsedContent?: boolean;
    /**
     * Время выполнения анимации
     */
    duration?: number;
    /**
     * Минимальная высота блока
     */
    minHeight?: number;
    /**
     * Функция по окончанию анимации
     */
    onTransitionEnd?: (event: React.TransitionEvent) => void;
    /**
     * Выравнивание дочернего блока
     */
    childrenAlign?: 'top' | 'center' | 'bottom';
    /**
     * Управление переполнением контейнера
     */
    overflowHidden?: boolean;
    /**
     * Задержка Анимации
     */
    delay?: number;
    /**
     * Не проставляем высоту для возможности увидеть контент до отработки js на клиенте.
     * Данная настройка актуальна c выключенным пропом `removeCollapsedContent={false}`
     */
    fallbackRender?: boolean;
}
declare const CollapseBlock: {
    (props: CollapseBlockProps): JSX.Element;
    defaultProps: {
        dataQaType: string;
        duration: number;
        overflowHidden: boolean;
        childrenAlign: string;
        removeCollapsedContent: boolean;
    };
};
export default CollapseBlock;
