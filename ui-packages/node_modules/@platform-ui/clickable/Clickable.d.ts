import React from 'react';
import type { DataQaInterface } from '@platform-ui/dataQa';
export interface ClickableProps extends React.HTMLAttributes<HTMLElement>, DataQaInterface {
    /**
     * Атрибут className
     */
    className?: string;
    children?: React.ReactNode;
    /**
     * Атрибут disabled
     */
    disabled?: boolean;
    /**
     * `className` для внутреннего `span` (который нужен для ловли фокуса по клику)
     */
    innerClassName?: string;
    /**
     * Атрибут `href` компонента.
     * При наличии этого атрибута автоматически в `tagName` проставляется 'a',
     * если в самом `tagName` ничего не указано
     */
    href?: string;
    /**
     * Атрибут rel.
     * При указанном атрибуте `target` со значением `_blank`
     * к атрибуту автоматически подставляется `noopener noreferrer`
     */
    rel?: string;
    /**
     * Объект с инлановыми стилями
     */
    style?: React.CSSProperties;
    /**
     * Атрибут tabIndex
     */
    tabIndex?: number;
    /**
     * Имя тега
     */
    tagName?: string;
    /**
     * Атрибут target
     */
    target?: string;
    /**
     * Атрибут type
     */
    type?: 'reset' | 'submit' | 'button';
    /**
     * Обработчик события onClick.
     * Не вызывается при клике средней кнопкой мыши,
     * при клике с зажатым Command/Ctrl на клавиатуре
     */
    onClick?: (e: React.MouseEvent<any>, params?: Record<string, any>) => void;
    /**
     * Включает атрибут `data-cobrowsing-secure` со значением `text`
     */
    cobrowsingSecure?: boolean;
    /**
     * DataQaType атрибут для внутреннего элемента
     */
    innerDataQaType?: string;
    /**
     * Реф на внутренний span (фокусируется при клике мышкой)
     */
    innerRef?: React.Ref<any>;
    /**
     * Добавляет атрибут download.
     * Указывает на то, что ссылка для скачивания файла.
     */
    download?: any;
}
declare const Clickable: React.ForwardRefExoticComponent<ClickableProps & React.RefAttributes<HTMLElement>>;
export default Clickable;
