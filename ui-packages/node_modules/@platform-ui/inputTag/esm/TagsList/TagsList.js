import React, { useEffect, useRef } from 'react';
import cn from 'classnames';
import ScrollBlock from '@platform-ui/scrollBlock';
import styles from './TagsList.module.css';

const TagsList = ({
  focused,
  children,
  scrollable,
  size
}) => {
  const setScrollPosition = useRef();

  const renderList = () => {
    const childrenArray = React.Children.toArray(children);
    return childrenArray.map((child, index) => /*#__PURE__*/React.createElement("span", {
      key: index === childrenArray.length - 1 ? 'input' : index,
      className: styles.item,
      onMouseDown: event => {
        event.stopPropagation();
      }
    }, child));
  };

  const getScrollBlockControllers = ({
    setScrollPosition: fn
  }) => {
    setScrollPosition.current = fn;
  };

  useEffect(() => {
    if (focused) {
      setScrollPosition.current == null ? void 0 : setScrollPosition.current('right');
    } else {
      setScrollPosition.current == null ? void 0 : setScrollPosition.current('left');
    }
  }, [focused]);
  return /*#__PURE__*/React.createElement("div", {
    className: cn(styles.list, styles[`list_size_${size}`])
  }, scrollable ? /*#__PURE__*/React.createElement(ScrollBlock, {
    getControllers: getScrollBlockControllers
  }, /*#__PURE__*/React.createElement("div", {
    className: styles.row
  }, renderList())) : renderList());
};

export default TagsList;