function useTags(value, params = {}) {
  const {
    empty = tag => !tag,
    equals = (tagA, tagB) => tagA === tagB
  } = params;

  function canAdd(tag) {
    return !empty(tag) && !value.some(t => equals(t, tag));
  }

  function addTag(tag) {
    if (!canAdd(tag)) {
      return value;
    }

    return [...value, tag];
  }

  function removeTag(index) {
    const newValue = [...value];
    newValue.splice(index, 1);
    return newValue;
  }

  function replaceTag(index, newTag) {
    if (equals(value[index], newTag)) {
      return value;
    }

    if (!canAdd(newTag)) {
      return removeTag(index);
    }

    const newValue = [...value];
    newValue.splice(index, 1, newTag);
    return newValue;
  }

  return {
    addTag,
    removeTag,
    replaceTag
  };
}

export default useTags;