import type { TagsContextType, InputTagChangeEvent, InputTagFocusEvent } from './types';
declare function useTagsState<TagType = string>(props: {
    name?: string;
    value: TagType[];
    valueErrors?: boolean[];
    focused?: boolean;
    disabled?: boolean;
    readOnly?: boolean;
    onChange: (event: InputTagChangeEvent, params: {
        value: TagType[];
        name?: string;
    }) => void;
    onFocus?: (event: InputTagFocusEvent, params: {
        name?: string;
    }) => void;
    onBlur?: (event: InputTagFocusEvent, params: {
        name?: string;
    }) => void;
    acceptTag: (tag: TagType) => TagType | null;
    isEmptyTag?: (tag: TagType) => boolean;
    isEqualTags?: (tagA: TagType, tagB: TagType) => boolean;
}): TagsContextType<TagType>;
export default useTagsState;
