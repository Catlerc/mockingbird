import React from 'react';
import { useTagsContext } from '../TagsContext';
import TagInputStandalone from './TagInputStandalone';

const TagAddInput = () => {
  const context = useTagsContext();
  const {
    value,
    disabled,
    readOnly,
    setInputValue,
    focusedIndex,
    setFocusedIndex,
    onFocus,
    onBlur,
    onAdd,
    dataQaType,
    acceptTag
  } = context;
  const focused = focusedIndex === 'input';
  const inputValue = focused ? context.inputValue : '';
  return /*#__PURE__*/React.createElement(TagInputStandalone, {
    dataQaType: `${dataQaType}.addInput`,
    value: inputValue,
    focused: focused,
    disabled: disabled,
    readOnly: readOnly,
    onBlur: event => {
      onBlur(event);
      const tag = acceptTag(inputValue);

      if (tag !== null) {
        onAdd(event, {
          tag
        });
      }
    },
    onFocus: event => {
      setFocusedIndex('input');
      onFocus(event);
    },
    onChange: (event, params) => {
      setInputValue(params.value);
    },
    onApply: event => {
      const tag = acceptTag(inputValue);

      if (tag !== null) {
        onAdd(event, {
          tag
        });
        setFocusedIndex(value.length + 1);
      }
    },
    onExitBackward: event => {
      if (value.length === 0) {
        return;
      }

      setFocusedIndex(value.length - 1);
      const tag = acceptTag(inputValue);

      if (tag !== null) {
        onAdd(event, {
          tag
        });
      } else {
        setInputValue('');
      }
    }
  });
};

export default TagAddInput;