import React from 'react';
import type { InputBoxVariant } from '@platform-ui/inputBox';
import type { Tag, Option, InputSize, InputTagFocusEvent } from './types';
export interface InputTagAutocompleteProps {
    dataQaType?: string;
    size?: InputSize;
    name?: string;
    value: Tag[];
    onChange: (event: any, params: {
        value: Tag[];
        name?: string;
    }) => void;
    focused?: boolean;
    onFocus?: (event: InputTagFocusEvent, params: {
        name?: string;
    }) => void;
    onBlur?: (event: InputTagFocusEvent, params: {
        name?: string;
    }) => void;
    request: (query: string) => Option[] | Promise<Option[]>;
    disabled?: boolean;
    readOnly?: boolean;
    error?: boolean;
    valueErrors?: boolean[];
    valid?: boolean;
    cleanable?: boolean;
    leftContent?: React.ReactNode;
    rightContent?: React.ReactNode;
    informationContent?: React.ReactNode;
    hintBlock?: React.ReactNode;
    inputIcon?: React.ReactNode;
    placeholder?: React.ReactNode;
    scrollable?: boolean;
    isEmptyTag?: (tag: Tag) => boolean;
    isEqualTags?: (tagA: Tag, tagB: Tag) => boolean;
    acceptTag?: (tag: Tag) => Tag | null;
    smartDirection?: boolean;
    tagSeparators?: string[];
    /**
     *  Определяет стилизацию компонента
     */
    variant?: InputBoxVariant;
    /**
     * Содержимое айтема для состояния "Нет результатов"
     */
    noResultsContent?: React.ReactNode;
}
declare const InputTagAutocomplete: React.FC<InputTagAutocompleteProps>;
export default InputTagAutocomplete;
