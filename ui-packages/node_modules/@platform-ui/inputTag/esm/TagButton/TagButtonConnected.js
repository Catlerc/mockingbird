import React from 'react';
import { useTagsContextAutocomplete } from '../TagsContext';
import TagButtonStandalone from './TagButtonStandalone';

const TagButtonConnected = props => {
  const context = useTagsContextAutocomplete();
  const {
    index
  } = props;
  const {
    onRemove,
    setFocusedIndex
  } = context;
  const tag = context.value[index];
  const tagTitle = typeof tag === 'string' ? tag : tag.title;
  return /*#__PURE__*/React.createElement(TagButtonStandalone, {
    size: props.size,
    focused: index === context.focusedIndex,
    disabled: context.disabled,
    readOnly: context.readOnly,
    error: context.valueErrors && context.valueErrors[index],
    onBlur: context.onBlur,
    onEdit: event => {
      if (context.focusedIndex === null) {
        context.onFocus(event);
      }

      context.setFocusedIndex(index);
      context.setEditing(true);
      context.setInputValue(tagTitle);
    },
    onRemove: event => {
      onRemove(event, {
        index
      });
    },
    onExitForward: event => {
      if (index === context.value.length - 1) {
        setFocusedIndex('input');
      } else {
        setFocusedIndex(index + 1);
      }
    },
    onExitBackward: event => {
      if (index > 0) {
        context.setFocusedIndex(index - 1);
      }
    }
  }, tagTitle);
};

export default TagButtonConnected;