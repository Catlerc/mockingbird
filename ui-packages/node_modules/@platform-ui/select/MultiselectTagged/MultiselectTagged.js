"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _tag = _interopRequireDefault(require("@platform-ui/tag"));

var _utils = require("../utils");

var _Multiselect2 = _interopRequireDefault(require("../Multiselect/Multiselect"));

var _MultiselectTaggedModule = _interopRequireDefault(require("./MultiselectTagged.module.css"));

var getHandler = function getHandler(optionValue, props) {
  return function () {
    var newSelectValue = (0, _utils.updateMultiselectValue)(props.value, optionValue);
    props.onChange && props.onChange(null, {
      value: newSelectValue
    });
  };
};

var MultiselectTagged = /*#__PURE__*/function (_Multiselect) {
  (0, _inheritsLoose2.default)(MultiselectTagged, _Multiselect);

  function MultiselectTagged() {
    return _Multiselect.apply(this, arguments) || this;
  }

  return MultiselectTagged;
}(_Multiselect2.default);

MultiselectTagged.propTypes = function () {
  var propTypes = (0, _extends2.default)({}, _Multiselect2.default.propTypes);
  delete propTypes.label;
  delete propTypes.required;
  return propTypes;
}();

MultiselectTagged.defaultProps = (0, _extends2.default)({}, _Multiselect2.default.defaultProps, {
  dataQaType: 'uikit/multiSelectTagged',
  renderLabel: function renderLabel() {},
  renderValue: function renderValue(properties) {
    return properties.selectedOption.map(function (option) {
      var _classNames;

      return /*#__PURE__*/_react.default.createElement("div", {
        className: (0, _classnames.default)((_classNames = {}, _classNames[_MultiselectTaggedModule.default.itemWrapper] = true, _classNames[_MultiselectTaggedModule.default.itemWrapper_expandable] = properties.expandable, _classNames)),
        key: option.value
      }, /*#__PURE__*/_react.default.createElement("div", {
        className: _MultiselectTaggedModule.default.item
      }, /*#__PURE__*/_react.default.createElement(_tag.default, {
        dataQaType: properties.dataQaType + ".tag",
        tabIndex: -1,
        tagName: "span",
        size: properties.size,
        theme: "onLight",
        onRemove: getHandler(option.value, properties),
        removable: !properties.readOnly,
        clickable: !properties.readOnly,
        onMouseDown: function onMouseDown(event) {
          event.preventDefault();
          event.stopPropagation();
        }
      }, option.title)));
    });
  }
});
var _default = MultiselectTagged;
exports.default = _default;