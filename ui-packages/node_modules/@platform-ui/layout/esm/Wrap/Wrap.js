import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
const _excluded = ["tagName", "gapsMain", "gapsCross", "direction", "alignMain", "alignCross", "style", "children", "className"];
import React, { forwardRef } from 'react';
import cn from 'classnames';
import { getSpacing } from '../utils';
import Box from '../Box/Box';
import styles from './Wrap.module.css';
const Wrap = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    tagName: TagName,
    gapsMain,
    gapsCross,
    direction,
    alignMain = 'start',
    alignCross = 'start',
    style,
    children,
    className
  } = props,
        restProps = _objectWithoutPropertiesLoose(props, _excluded);

  const rootStyle = _extends({}, style);

  if (gapsMain) {
    rootStyle['--gaps-main'] = getSpacing(gapsMain);
    rootStyle['--gaps-main-negative'] = `-${rootStyle['--gaps-main']}`;
  }

  if (gapsCross) {
    rootStyle['--gaps-cross'] = getSpacing(gapsCross);
    rootStyle['--gaps-cross-negative'] = `-${rootStyle['--gaps-cross']}`;
  }

  return /*#__PURE__*/React.createElement(Box, Object.assign({
    ref: ref,
    tagName: TagName,
    className: cn(styles.root, className, {
      [styles[`root_direction-${direction}`]]: direction,
      [styles[`root_alignMain-${alignMain}`]]: alignMain,
      [styles[`root_alignCross-${alignCross}`]]: alignCross
    }),
    style: rootStyle
  }, restProps), /*#__PURE__*/React.createElement(Box, {
    tagName: TagName,
    className: styles.wrapper
  }, children));
});
export default Wrap;