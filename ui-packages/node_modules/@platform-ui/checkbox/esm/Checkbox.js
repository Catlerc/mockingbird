import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
const _excluded = ["dataQaType", "dataQaData", "size", "theme", "error", "inputAttrs"];
import React from 'react';
import cn from 'classnames';
import dataQa from '@platform-ui/dataQa';
import Checkable from '@platform-ui/checkable';
import { withCheckableInputState } from '@platform-ui/stateUtils';
import { Int16Tip as Tip16, Int24Tip as Tip24, Int16Minus as Minus16, Int24MinusFlat as Minus24 } from '@platform-ui/iconsPack';
import styles from './Checkbox.module.css';
const iconMap = {
  checked: {
    s: Tip16,
    l: Tip24
  },
  indeterminate: {
    s: Minus16,
    l: Minus24
  }
};

function getCustomThemeStyles({
  background,
  backgroundChecked,
  color,
  borderColor
}, checked) {
  return {
    backgroundColor: checked && backgroundChecked || background,
    color,
    boxShadow: borderColor && `inset 0 0 0 1px ${borderColor}`
  };
}

export const CheckboxStateless = props => {
  const {
    dataQaType = 'uikit/checkbox',
    dataQaData,
    size = 'l',
    theme = 'default',
    error,
    inputAttrs
  } = props,
        inputProps = _objectWithoutPropertiesLoose(props, _excluded);

  const {
    checked,
    disabled
  } = inputProps;
  const iconType = React.useRef('checked');

  if (checked) {
    iconType.current = 'checked';
  }

  if (inputProps.indeterminate) {
    iconType.current = 'indeterminate';
  }

  const IconTag = iconMap[iconType.current][size];
  const themeType = typeof theme !== 'object' ? theme : 'custom';
  const isCustomTheme = themeType === 'custom';
  const customTheme = theme;
  return /*#__PURE__*/React.createElement("span", Object.assign({}, dataQa({
    dataQaType,
    dataQaData
  }), {
    className: cn(styles.root, styles[`root_size_${size}`], styles[`root_theme_${themeType}`], {
      [styles.root_error]: error
    }),
    style:
    /* eslint-disable no-nested-ternary */
    isCustomTheme ? error ? customTheme.errorStyles ? getCustomThemeStyles(customTheme.errorStyles, checked) : {} : getCustomThemeStyles(customTheme, checked) : undefined
    /* eslint-enable no-nested-ternary */

  }), /*#__PURE__*/React.createElement(Checkable, Object.assign({}, inputAttrs, inputProps, {
    type: "checkbox",
    className: styles.input,
    dataQaType: `${dataQaType}.input`
  })), /*#__PURE__*/React.createElement("span", {
    className: styles.icon
  }, /*#__PURE__*/React.createElement(IconTag, null)));
};
const Checkbox = withCheckableInputState(CheckboxStateless);
export default Checkbox;