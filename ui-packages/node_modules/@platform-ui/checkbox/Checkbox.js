"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

exports.__esModule = true;
exports.default = exports.CheckboxStateless = void 0;

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _dataQa = _interopRequireDefault(require("@platform-ui/dataQa"));

var _checkable = _interopRequireDefault(require("@platform-ui/checkable"));

var _stateUtils = require("@platform-ui/stateUtils");

var _iconsPack = require("@platform-ui/iconsPack");

var _CheckboxModule = _interopRequireDefault(require("./Checkbox.module.css"));

var _excluded = ["dataQaType", "dataQaData", "size", "theme", "error", "inputAttrs"];
var iconMap = {
  checked: {
    s: _iconsPack.Int16Tip,
    l: _iconsPack.Int24Tip
  },
  indeterminate: {
    s: _iconsPack.Int16Minus,
    l: _iconsPack.Int24MinusFlat
  }
};

function getCustomThemeStyles(_ref, checked) {
  var background = _ref.background,
      backgroundChecked = _ref.backgroundChecked,
      color = _ref.color,
      borderColor = _ref.borderColor;
  return {
    backgroundColor: checked && backgroundChecked || background,
    color: color,
    boxShadow: borderColor && "inset 0 0 0 1px " + borderColor
  };
}

var CheckboxStateless = function CheckboxStateless(props) {
  var _cn;

  var _props$dataQaType = props.dataQaType,
      dataQaType = _props$dataQaType === void 0 ? 'uikit/checkbox' : _props$dataQaType,
      dataQaData = props.dataQaData,
      _props$size = props.size,
      size = _props$size === void 0 ? 'l' : _props$size,
      _props$theme = props.theme,
      theme = _props$theme === void 0 ? 'default' : _props$theme,
      error = props.error,
      inputAttrs = props.inputAttrs,
      inputProps = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
  var checked = inputProps.checked,
      disabled = inputProps.disabled;

  var iconType = _react.default.useRef('checked');

  if (checked) {
    iconType.current = 'checked';
  }

  if (inputProps.indeterminate) {
    iconType.current = 'indeterminate';
  }

  var IconTag = iconMap[iconType.current][size];
  var themeType = typeof theme !== 'object' ? theme : 'custom';
  var isCustomTheme = themeType === 'custom';
  var customTheme = theme;
  return /*#__PURE__*/_react.default.createElement("span", Object.assign({}, (0, _dataQa.default)({
    dataQaType: dataQaType,
    dataQaData: dataQaData
  }), {
    className: (0, _classnames.default)(_CheckboxModule.default.root, _CheckboxModule.default["root_size_" + size], _CheckboxModule.default["root_theme_" + themeType], (_cn = {}, _cn[_CheckboxModule.default.root_error] = error, _cn)),
    style:
    /* eslint-disable no-nested-ternary */
    isCustomTheme ? error ? customTheme.errorStyles ? getCustomThemeStyles(customTheme.errorStyles, checked) : {} : getCustomThemeStyles(customTheme, checked) : undefined
    /* eslint-enable no-nested-ternary */

  }), /*#__PURE__*/_react.default.createElement(_checkable.default, Object.assign({}, inputAttrs, inputProps, {
    type: "checkbox",
    className: _CheckboxModule.default.input,
    dataQaType: dataQaType + ".input"
  })), /*#__PURE__*/_react.default.createElement("span", {
    className: _CheckboxModule.default.icon
  }, /*#__PURE__*/_react.default.createElement(IconTag, null)));
};

exports.CheckboxStateless = CheckboxStateless;
var Checkbox = (0, _stateUtils.withCheckableInputState)(CheckboxStateless);
var _default = Checkbox;
exports.default = _default;