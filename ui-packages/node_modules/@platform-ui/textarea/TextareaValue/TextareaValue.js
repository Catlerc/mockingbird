"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

exports.__esModule = true;
exports.TextareaValue = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _throttle = _interopRequireDefault(require("@tinkoff/utils/function/throttle"));

var _useCallbackRef = require("use-callback-ref");

var _focusUtils = require("@platform-ui/focusUtils");

var _inputTools = require("@platform-ui/inputTools");

var _TextareaValueModule = _interopRequireDefault(require("./TextareaValue.module.css"));

var _excluded = ["dataQaType", "value", "focused", "cobrowsingSecure"];
var TextareaValue = (0, _inputTools.placeholderHOC)(_inputTools.InlinePlaceholder)( /*#__PURE__*/(0, _react.forwardRef)(function (props, forwardedRef) {
  var selfRef = (0, _react.useRef)(null);

  var _useControlledFocus = (0, _focusUtils.useControlledFocus)((0, _extends2.default)({}, props, {
    ref: (0, _useCallbackRef.useMergeRefs)([selfRef, forwardedRef])
  })),
      dataQaType = _useControlledFocus.dataQaType,
      value = _useControlledFocus.value,
      focused = _useControlledFocus.focused,
      cobrowsingSecure = _useControlledFocus.cobrowsingSecure,
      otherProps = (0, _objectWithoutPropertiesLoose2.default)(_useControlledFocus, _excluded);

  var _useState = (0, _react.useState)('auto'),
      height = _useState[0],
      setHeight = _useState[1];

  var updateHeight = (0, _react.useCallback)(function () {
    var textarea = selfRef.current;

    if (!textarea) {
      return;
    }

    textarea.style.height = 'auto';
    var scrollHeight = textarea.scrollHeight;

    if (scrollHeight === 0) {
      return;
    }

    textarea.style.height = scrollHeight + "px";
    setHeight(scrollHeight);
  }, []);
  (0, _react.useEffect)(updateHeight, [value, updateHeight]);
  (0, _react.useEffect)(function () {
    if (typeof ResizeObserver !== 'undefined') {
      var observer = new ResizeObserver(updateHeight);

      if (selfRef.current) {
        observer.observe(selfRef.current);
      }

      return function () {
        observer.disconnect();
      };
    }

    var onWindowResize = (0, _throttle.default)(100, updateHeight);
    window.addEventListener('resize', onWindowResize);
    return function () {
      window.removeEventListener('resize', onWindowResize);
    };
  }, [updateHeight]);
  return /*#__PURE__*/_react.default.createElement("textarea", Object.assign({}, otherProps, {
    "data-qa-type": dataQaType + ".input",
    className: _TextareaValueModule.default.textarea,
    value: value,
    style: (0, _extends2.default)({}, otherProps.style || {}, {
      height: height
    }),
    placeholder: "",
    "data-cobrowsing-secure": cobrowsingSecure ? 'input' : ''
  }));
}));
exports.TextareaValue = TextareaValue;