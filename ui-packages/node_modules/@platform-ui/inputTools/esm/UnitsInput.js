import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
const _excluded = ["prefix", "units", "emptyValue"];
import React, { forwardRef } from 'react';
import unitsPostfix from './unitsPostfix';
import PrefixPostfixInput from './PrefixPostfixInput';
import numberInputHOC from './numberInputHOC';
import placeholderHOC from './placeholderHOC';
import InlinePlaceholder from './InlinePlaceholder/InlinePlaceholder';
import { getEmptyValue } from './numberInputUtils/parse';
import { formatNumber } from './numberInputUtils/format';
const NumberInput = numberInputHOC(placeholderHOC(InlinePlaceholder)(PrefixPostfixInput));
const UnitsInput = /*#__PURE__*/forwardRef((_ref, forwardedRef) => {
  let {
    prefix,
    units,
    emptyValue: emptyValueProp
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, _excluded);

  const emptyValue = getEmptyValue(_extends({
    emptyValue: emptyValueProp
  }, props));
  const emptyValueFormatted = formatNumber(emptyValue, props);
  const emptyValuePostfix = unitsPostfix(emptyValue, units);
  const placeholder = `${emptyValueFormatted}${emptyValuePostfix}`;
  const postfix = unitsPostfix(props.value, units);
  return /*#__PURE__*/React.createElement(NumberInput, Object.assign({
    ref: forwardedRef
  }, props, {
    prefix: prefix,
    postfix: postfix,
    placeholder: placeholder
  }));
});
UnitsInput.defaultProps = _extends({}, NumberInput.defaultProps);
export default UnitsInput;