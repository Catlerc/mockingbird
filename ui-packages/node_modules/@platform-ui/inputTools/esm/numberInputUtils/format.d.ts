import type { FormatProps, InputSelection, Settings, Token, Tokens } from './types';
export declare const DEFAULT_DIGIT_GROUPING_SEPARATOR = " ";
export declare const DEFAULT_DECIMAL_SEPARATOR = ",";
export declare function propsToSettings(props: FormatProps): Settings;
export declare function tokenize({ value, selectionStart, selectionEnd }: InputSelection, settings: Settings): Token[];
export declare function isAllowedCharacter(token: Token, settings: Settings): boolean | undefined;
export declare function cutToken(tokens: Tokens, index: number): Tokens;
export declare function filterAllowedCharacters(tokens: Tokens, settings: Settings): Tokens;
export declare function findWholePartStart(tokens: Tokens): 1 | 2;
export declare function findWholePart(tokens: Tokens, settings: Settings): number[];
export declare function fillSpaces(tokens: Tokens, settings: Settings): Tokens;
export declare function cutIndexes(tokens: Tokens, indexes: number[]): Tokens;
export declare function filterExcessCommas(tokens: Tokens): Tokens;
export declare const filterExcessSigns: (tokens: Tokens) => Tokens;
export declare function insertMandatorySign(tokens: Tokens, settings: Settings): Tokens | undefined;
export declare function shouldUpdateFormat(prevProps: FormatProps, nextProps: FormatProps): boolean;
export declare function numberToInput(number: number, settings: Settings): {
    value: string;
    selectionStart: number;
    selectionEnd: number;
};
export declare function padEndZeroes(tokens: Tokens, count: number): Tokens;
export declare function fixPrecision(tokens: Tokens): Token[];
export declare function padStartZeroes(tokens: Tokens, count: number): Tokens;
export declare function calcMaxLength(props: FormatProps): number;
export declare function cutStartZeroes(tokens: Tokens, count: number): Tokens;
export declare function fixWholePartLength(tokens: Tokens, settings: Settings): Tokens;
export declare function formatInput(input: InputSelection, props: FormatProps): {
    value: string;
    selectionStart: number;
    selectionEnd: number;
};
export declare function formatNumber(number: number, props: FormatProps): string;
