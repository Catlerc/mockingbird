"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _overrideStyles = _interopRequireDefault(require("@platform-ui/overrideStyles"));

var _InlinePlaceholderModule = _interopRequireDefault(require("./InlinePlaceholder.module.css"));

var InlinePlaceholder = function InlinePlaceholder(_ref) {
  var _cn;

  var input = _ref.input,
      _ref$value = _ref.value,
      value = _ref$value === void 0 ? '' : _ref$value,
      placeholder = _ref.placeholder,
      partialPlaceholder = _ref.partialPlaceholder,
      minWidth = _ref.minWidth,
      dataQaType = _ref.dataQaType,
      prefix = _ref.prefix,
      __overrideStyles = _ref.__overrideStyles,
      _ref$whiteSpace = _ref.whiteSpace,
      whiteSpace = _ref$whiteSpace === void 0 ? 'nowrap' : _ref$whiteSpace;
  var maskPart = partialPlaceholder && placeholder && typeof placeholder === 'string' && placeholder.substring(value.length);
  var styles = (0, _react.useMemo)(function () {
    return (0, _overrideStyles.default)(_InlinePlaceholderModule.default, __overrideStyles == null ? void 0 : __overrideStyles.InlinePlaceholder);
  }, [__overrideStyles]);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)((_cn = {}, _cn[styles.root] = true, _cn[styles.root_showPlaceholder] = !value || partialPlaceholder, _cn)),
    style: {
      minWidth: minWidth,
      whiteSpace: whiteSpace
    },
    "data-qa-type": dataQaType
  }, /*#__PURE__*/_react.default.createElement("div", {
    "data-qa-type": dataQaType + ".wrapper",
    className: styles.placeholder,
    role: "presentation",
    "aria-hidden": "true"
  }, prefix && /*#__PURE__*/_react.default.createElement("span", {
    className: styles.placeholderPrefix
  }, prefix + "\u200B"), partialPlaceholder ? /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement("span", {
    "data-qa-type": dataQaType + ".placeholderValue",
    className: styles.placeholderValue
  }, value), /*#__PURE__*/_react.default.createElement("span", {
    "data-qa-type": dataQaType + ".placeholderMask"
  }, maskPart)) : placeholder), /*#__PURE__*/_react.default.createElement("div", null, input));
};

InlinePlaceholder.defaultProps = {
  dataQaType: 'uikit/inlinePlaceholder'
};
var _default = InlinePlaceholder;
exports.default = _default;