"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _excluded = ["tagName", "onMouseDown"];
var focusableSelector = ['input', 'select', 'textarea', '[tabindex]'].map(function (selector) {
  return selector + ":not([tabindex=\"-1\"])";
}).join(',');

var getControl = function getControl(label) {
  if (label.control) {
    return label.control;
  }

  if (label.htmlFor) {
    return document.getElementById(label.htmlFor);
  }

  return label.querySelector(focusableSelector);
};

var FocusArea = function FocusArea(_ref) {
  var _ref$tagName = _ref.tagName,
      tagName = _ref$tagName === void 0 ? 'div' : _ref$tagName,
      onMouseDown = _ref.onMouseDown,
      props = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);
  return /*#__PURE__*/_react.default.createElement(tagName, (0, _extends2.default)({
    onMouseDown: (0, _react.useCallback)(function (event) {
      var control = getControl(event.currentTarget);

      if (control && !control.contains(event.target)) {
        event.preventDefault();

        if (document.activeElement !== control) {
          control.focus();
        }
      }

      onMouseDown && onMouseDown(event);
    }, [onMouseDown])
  }, props));
};

var _default = FocusArea;
exports.default = _default;