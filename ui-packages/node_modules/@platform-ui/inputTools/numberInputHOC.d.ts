import React from 'react';
import type { FormatProps } from './numberInputUtils/types';
export declare type InputKeyboardEvent = React.KeyboardEvent<HTMLInputElement>;
export interface NumberInputChildProps {
    name?: string;
    type?: string;
    onBlur?: React.FocusEventHandler;
    onFocus?: React.FocusEventHandler;
    onKeyDown?: React.KeyboardEventHandler;
    onKeyPress?: React.KeyboardEventHandler;
    value?: string;
    onChange?: React.ChangeEventHandler;
    inputMode?: string;
    maxLength?: number;
}
export declare type NumberInputProps<T = NumberInputChildProps> = FormatProps & Omit<T, 'value' | 'onChange' | 'step' | 'type'> & {
    forwardedRef?: React.RefObject<HTMLInputElement>;
    value: number | null;
    type?: 'text' | 'tel';
    focused?: boolean;
    onKeyDown?: React.KeyboardEventHandler;
    onChange: (e: React.ChangeEvent | React.KeyboardEvent, params: {
        value?: string | number | null;
        name?: string;
    }) => void;
};
export interface NumberInputState {
    formattedValue: string;
}
declare const numberInputHOC: <T extends NumberInputChildProps>(obj: React.ComponentType<T>) => any;
export default numberInputHOC;
