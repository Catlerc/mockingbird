import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
const _excluded = ["children", "uppercase", "tagName", "size", "sizeTabletL", "sizeTabletS", "sizeDesktopS", "sizeDesktopM", "sizeDesktopL", "align", "alignTabletS", "alignTabletL", "alignDesktopS", "alignDesktopM", "alignDesktopL", "overflowEllipsis", "verticalAlign", "bold", "display", "lineThrough", "cobrowsingSecure", "whiteSpace", "wordWrap", "capitalize", "cursor", "color", "dataQaType"];
import React from 'react';
import classNames from 'classnames';
import dataQa from '@platform-ui/dataQa';
import s from './Text.module.css';

const Text = _ref => {
  let {
    children,
    uppercase,
    tagName,
    size,
    sizeTabletL,
    sizeTabletS,
    sizeDesktopS,
    sizeDesktopM,
    sizeDesktopL,
    align,
    alignTabletS,
    alignTabletL,
    alignDesktopS,
    alignDesktopM,
    alignDesktopL,
    overflowEllipsis,
    verticalAlign,
    bold,
    display,
    lineThrough,
    cobrowsingSecure,
    whiteSpace,
    wordWrap,
    capitalize,
    cursor,
    color,
    dataQaType
  } = _ref,
      otherProps = _objectWithoutPropertiesLoose(_ref, _excluded);

  return /*#__PURE__*/React.createElement(tagName || 'div', _extends({}, otherProps, {
    style: {
      whiteSpace,
      verticalAlign,
      display,
      wordWrap,
      cursor,
      color
    },
    className: classNames({
      [s.text]: true,
      [s[`text_size_${size}`]]: true,
      [s[`text_sizeTabletS_${sizeTabletS || size}`]]: true,
      [s[`text_sizeTabletL_${sizeTabletL || sizeTabletS || size}`]]: true,
      [s[`text_sizeDesktopS_${sizeDesktopS || sizeTabletL || sizeTabletS || size}`]]: true,
      [s[`text_sizeDesktopM_${sizeDesktopM || sizeDesktopS || sizeTabletL || sizeTabletS || size}`]]: true,
      [s[`text_sizeDesktopL_${sizeDesktopL || sizeDesktopM || sizeDesktopS || sizeTabletL || sizeTabletS || size}`]]: true,
      [s[`text_align_${align}`]]: align,
      [s[`text_alignTabletS_${alignTabletS}`]]: alignTabletS,
      [s[`text_alignTabletL_${alignTabletL}`]]: alignTabletL,
      [s[`text_alignDesktopS_${alignDesktopS}`]]: alignDesktopS,
      [s[`text_alignDesktopM_${alignDesktopM}`]]: alignDesktopM,
      [s[`text_alignDesktopL_${alignDesktopL}`]]: alignDesktopL,
      [s.text_bold]: bold,
      [s.text_overflowEllipsis]: overflowEllipsis,
      [s.text_lineThrough]: lineThrough,
      [s.text_uppercase]: uppercase,
      [s.text_capitalize]: capitalize
    })
  }, cobrowsingSecure ? {
    'data-cobrowsing-secure': 'text'
  } : {}, dataQa({
    dataQaType
  })), children);
};

Text.defaultProps = {
  dataQaType: 'uikit/text',
  bold: false,
  capitalize: false,
  cobrowsingSecure: false,
  lineThrough: false,
  overflowEllipsis: false,
  size: 13,
  tagName: 'div',
  uppercase: false
};
export default Text;