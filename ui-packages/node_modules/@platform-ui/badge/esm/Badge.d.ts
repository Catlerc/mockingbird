/// <reference types="react" />
import type { ClickableProps } from '@platform-ui/clickable';
export interface BadgeProps extends Omit<ClickableProps, 'className' | 'innerClassName' | 'style'> {
    /**
     * Выбор скругления углов элемента [4, 8]
     */
    borderRadius?: 4 | 8;
    /** @deprecated проп будет удален, используйте проп theme
     * Цвет компонента
     */
    color?: 'onDark' | 'onLight' | 'gray' | 'lightBlue' | 'yellow' | 'white' | 'whiteBlock' | 'green' | 'red' | 'blue' | 'highlight';
    /**
     * Кастомный цвет фона
     */
    customBackground?: string;
    /**
     * Кастомный цвет текста
     */
    customColor?: string;
    /**
     * Включает поддержку смены цвета на событие hover
     */
    hover?: boolean;
    /**
     * Выбор внутренних отступов компонента [8, 10, 12, 16]
     * @default 12
     */
    padding?: 8 | 10 | 12 | 16;
    /**
     * Выбор размера компонента ['s', 'm', 'l', 'xl']
     * @default 'l'
     */
    size?: 'xl' | 'l' | 'm' | 's';
    /**
     * Флаг, "кружочка" статуса слева
     */
    status?: boolean;
    /** @deprecated проп будет удален, используйте проп theme или statusCustomColor
     * Цвет, "кружочка" статуса
     */
    statusColor?: 'yellow' | 'green' | 'red';
    /**
     * Кастомный цвет, "кружочка" статуса
     */
    statusCustomColor?: string;
    /**
     * Отмена скругления углов бейджа
     */
    flatCorners?: string;
    /**
     * Тип бейджа
     */
    theme?: 'default' | 'primary' | 'success' | 'warning' | 'error' | 'neutral' | 'info';
}
declare const Badge: {
    ({ borderRadius, children, color, customBackground, customColor, hover, padding, size, status, statusColor, statusCustomColor, flatCorners, theme, dataQaType, href, tagName, ...otherProps }: BadgeProps): JSX.Element | null;
    defaultProps: {
        dataQaType: string;
        color: string;
        padding: number;
        size: string;
        tabIndex: number;
        tagName: string;
    };
};
export default Badge;
