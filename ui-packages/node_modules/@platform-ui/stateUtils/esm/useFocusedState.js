import { useState, useCallback } from 'react';
export const useFocusedState = props => {
  const {
    focused,
    onFocus,
    onBlur
  } = props;
  const [stateFocused, setStateFocused] = useState(false);
  return {
    focused: focused !== undefined ? focused : stateFocused,
    onFocus: useCallback((event, params) => {
      setStateFocused(true);
      onFocus && onFocus(event, params);
    }, [onFocus]),
    onBlur: useCallback((event, params) => {
      setStateFocused(false);
      onBlur && onBlur(event, params);
    }, [onBlur])
  };
};