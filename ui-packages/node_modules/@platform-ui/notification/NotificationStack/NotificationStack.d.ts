import React from 'react';
import type { NotificationToastProps } from '../NotificationToast/NotificationToast';
import type { NotificationStackOnHideCallback, NotificationStackOnCloseCallback, NotificationStackOnActionConfirmCallback, NotificationStackOnCancelCallback } from './types';
export interface NotificationComponentProps extends NotificationToastProps {
    /**
     * Отступ сверху
     */
    offsetTop?: React.CSSProperties['top'];
    /**
     * Отступ справа
     */
    offsetRight?: React.CSSProperties['right'];
    /**
     * Ширина
     */
    width?: React.CSSProperties['width'];
    /**
     * положение по Z
     */
    zIndex?: React.CSSProperties['zIndex'];
}
export interface NotificationStackBaseProps<T extends NotificationComponentProps> extends Omit<NotificationComponentProps, 'onHide' | 'onClose' | 'onActionConfirm' | 'onCancel'> {
    /**
     * Колбек события скрытия уведомления
     */
    onHide?: NotificationStackOnHideCallback<T>;
    /**
     * Колбек события клика по «крестику»
     */
    onClose?: NotificationStackOnCloseCallback<T>;
    /**
     * Колбек события клика по кнопке действия
     */
    onActionConfirm?: NotificationStackOnActionConfirmCallback<T>;
    /**
     * Колбек события клика по кнопке отмены
     */
    onCancel?: NotificationStackOnCancelCallback<T>;
}
export interface NotificationStackProps<T extends NotificationComponentProps = NotificationComponentProps> extends NotificationStackBaseProps<T> {
    /**
     * Массив уведомлений
     */
    notifications?: (T & {
        notificationComponent?: React.ComponentType<T>;
        id?: string;
    })[];
}
declare const NotificationStack: {
    <T extends NotificationComponentProps = NotificationComponentProps>(props: NotificationStackProps<T>): JSX.Element;
    defaultProps: {
        dataQaType: string;
        paddingBottom: number;
        animateFirstRender: boolean;
        modStyles: any;
        overflowHiddenCollapse: boolean;
        delayCollapse: number;
        visibleCollapse: boolean;
        timer: number;
        type: "info";
        showClose: boolean;
        withIcon: boolean;
        hideOnAction: boolean;
        hideOnCancel: boolean;
    };
};
export default NotificationStack;
