import { useState, useEffect } from 'react';
export const useTimer = (callback, timeout) => {
  const [timerId, setTimerId] = useState();
  const [timeLeft, setTimeLeft] = useState();
  const [timerStartTime, setTimerStartTime] = useState();

  const setTimer = () => {
    if (!timeout) {
      return;
    }

    if (timeLeft === undefined) {
      setTimeLeft(timeout);
    }

    clearTimeout(timerId);
    setTimerStartTime(Date.now());
    setTimerId(window.setTimeout(callback, timeout));
  };

  const pauseTimer = () => {
    if (!timeout || !timerStartTime || !timeLeft) {
      return;
    }

    const timerPauseTime = Date.now();
    const timeElapsed = timerPauseTime - timerStartTime;
    setTimeLeft(timeLeft - timeElapsed);
    setTimerStartTime(undefined);
    clearTimeout(timerId);
  };

  useEffect(() => {
    return () => {
      clearTimeout(timerId);
    };
  }, [timerId]);
  return {
    setTimer,
    pauseTimer
  };
};