import React from 'react';
import type { DataQaInterface } from '@platform-ui/dataQa';
import type { NotificationOnHideCallback, NotificationOnCloseCallback } from './types';
import type { NotificationBaseButtonsProps } from './NotificationBaseButtons';
export declare const TYPES: {
    readonly INFO: "info";
    readonly SUCCESS: "success";
    readonly WARNING: "warning";
    readonly ERROR: "error";
};
export interface NotificationBaseProps extends DataQaInterface, NotificationBaseButtonsProps {
    /**
     * Заголовок компонента
     */
    title?: string;
    /**
     * Основной контент компонента
     */
    children?: React.ReactNode;
    /**
     * Значение задержки до скрытия уведомления (false отключает автоматическое скрытие по таймауту)
     */
    timer?: false | number;
    /**
     * Вид отображения компонента
     */
    type?: typeof TYPES[keyof typeof TYPES];
    /**
     * Флаг отображения крестика
     */
    showClose?: boolean;
    /**
     * Стили для задания анимации появления/сокрытия
     */
    modStyles?: Record<string, string>;
    /**
     * Параметр duration для CollapseBlock
     */
    durationCollapse?: number;
    /**
     * Параметр delay для CollapseBlock
     */
    delayCollapse?: number;
    /**
     * Параметр visible для CollapseBlock
     */
    visibleCollapse?: boolean;
    /**
     * Параметр overflowHidden для CollapseBlock
     */
    overflowHiddenCollapse?: boolean;
    /**
     * Флаг анимированного появления компонента
     */
    animateFirstRender?: boolean;
    /**
     * Отступ снизу от элемента
     */
    paddingBottom?: number;
    /**
     * Флаг отображения иконки перед текстом
     */
    withIcon?: boolean;
    /**
     * Кастомная иконка статуса
     */
    icon?: React.ReactNode;
    /**
     * Флаг скрытия при нажатии на кнопку действия
     */
    hideOnAction?: boolean;
    /**
     * Флаг скрытия при нажатии на кнопку отмены
     */
    hideOnCancel?: boolean;
    /**
     * Колбек события скрытия уведомления
     */
    onHide?: NotificationOnHideCallback;
    /**
     * Колбек события клика по «крестику»
     */
    onClose?: NotificationOnCloseCallback;
}
declare const NotificationBase: {
    (props: NotificationBaseProps): JSX.Element | null;
    defaultProps: {
        dataQaType: string;
        visibleCollapse: boolean;
        paddingBottom: number;
        timer: number;
        type: "info";
        showClose: boolean;
        modStyles: {};
        animateFirstRender: boolean;
        withIcon: boolean;
        hideOnAction: boolean;
        hideOnCancel: boolean;
    };
};
export default NotificationBase;
