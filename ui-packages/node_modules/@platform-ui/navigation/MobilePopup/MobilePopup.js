"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _bodyScrollLock = require("body-scroll-lock");

var _dataQa = _interopRequireDefault(require("@platform-ui/dataQa"));

var _draggable = _interopRequireDefault(require("@platform-ui/draggable"));

var _portal = _interopRequireDefault(require("@platform-ui/portal"));

var _NavClose = _interopRequireDefault(require("@platform-ui/iconsPack/interface/24/NavClose"));

var _MobilePopupModule = _interopRequireDefault(require("./MobilePopup.module.css"));

var _Row = _interopRequireDefault(require("../Row"));

var _Background = _interopRequireDefault(require("../Background"));

var _Container = _interopRequireDefault(require("../Container"));

var DELTA_HIDE = 50; // percents

var ALIGN_LEFT = 'left';
var ALIGN_RIGHT = 'right';

var MobilePopup = function MobilePopup(props) {
  var _cn;

  var children = props.children,
      active = props.active,
      logo = props.logo,
      align = props.align,
      onClose = props.onClose;

  var _useState = (0, _react.useState)(0),
      dragDelta = _useState[0],
      setDragDelta = _useState[1];

  var _useState2 = (0, _react.useState)(false),
      dragClose = _useState2[0],
      setDragClose = _useState2[1];

  var scrollContainerEl = (0, _react.useRef)(null);

  var handleClose = function handleClose() {
    onClose();
  };

  var handleDrag = function handleDrag(event) {
    var delta = event.delta.page.x,
        width = event.rect.width;

    if (align === ALIGN_LEFT && delta >= 0) {
      return;
    }

    if (align === ALIGN_RIGHT && delta <= 0) {
      return;
    }

    setDragDelta(delta);
    setDragClose(Math.abs(delta) >= width / 100 * DELTA_HIDE);
  };

  var handleDragEnd = function handleDragEnd() {
    if (dragClose) {
      handleClose();
    }

    setDragDelta(0);
    setDragClose(false);
  };

  (0, _react.useEffect)(function () {
    if (active && scrollContainerEl.current) {
      (0, _bodyScrollLock.disableBodyScroll)(scrollContainerEl.current);
    }

    return function () {
      (0, _bodyScrollLock.clearAllBodyScrollLocks)();
    };
  }, [active]);
  return /*#__PURE__*/_react.default.createElement(_portal.default, {
    toBody: true
  }, /*#__PURE__*/_react.default.createElement("nav", Object.assign({
    className: (0, _classnames.default)(_MobilePopupModule.default.root, (_cn = {}, _cn[_MobilePopupModule.default.root_active] = active, _cn[_MobilePopupModule.default["root_align-" + align]] = true, _cn))
  }, (0, _dataQa.default)(props)), /*#__PURE__*/_react.default.createElement("div", {
    className: _MobilePopupModule.default.overlay
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: _MobilePopupModule.default.wrapper,
    style: {
      left: dragDelta
    }
  }, /*#__PURE__*/_react.default.createElement(_draggable.default, {
    onDrag: handleDrag,
    onDragEnd: handleDragEnd,
    onDragStart: handleDrag,
    allowDefaultAction: true,
    touchable: true,
    style: {
      height: '100%'
    },
    onClick: handleClose
  }, /*#__PURE__*/_react.default.createElement(_Background.default, {
    theme: "gray"
  }, /*#__PURE__*/_react.default.createElement(_Container.default, {
    mobile: true
  }, /*#__PURE__*/_react.default.createElement(_Row.default, {
    mobile: true,
    left: logo,
    right: /*#__PURE__*/_react.default.createElement(_NavClose.default, {
      dataQaType: "uikit/navigation.closeMobilePopup"
    })
  }))), /*#__PURE__*/_react.default.createElement("div", {
    className: _MobilePopupModule.default.scrollContainer,
    ref: scrollContainerEl
  }, children)))));
};

MobilePopup.defaultProps = {
  align: 'left',
  dataQaType: 'uikit/navigation.MobilePopup'
};
var _default = MobilePopup;
exports.default = _default;