"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _dataQa = _interopRequireDefault(require("@platform-ui/dataQa"));

var _scrollBlock = _interopRequireDefault(require("@platform-ui/scrollBlock"));

var _MobileMenuItem = _interopRequireDefault(require("./MobileMenuItem"));

var _MobileMenuModule = _interopRequireDefault(require("./MobileMenu.module.css"));

var INNER_PADDING = 16;

var MobileMenu = function MobileMenu(props) {
  var items = props.items,
      onClick = props.onClick,
      underlined = props.underlined;
  var rootEl = (0, _react.useRef)(null);
  var menuEl = (0, _react.useRef)(null);
  var activeEl = (0, _react.useRef)(null);
  var setPosition = (0, _react.useRef)();

  var getScrollController = function getScrollController(_ref) {
    var setScrollPosition = _ref.setScrollPosition;
    setPosition.current = setScrollPosition;
  };

  var activeIndex = (0, _react.useMemo)(function () {
    return items.findIndex(function (item) {
      return Boolean(item.active);
    });
  }, [items]);

  var calcScrollPosition = function calcScrollPosition(container, menu, item) {
    var animationValue = 0;

    if (menu.offsetWidth > container.offsetWidth) {
      // на сколько нужно проскроллить контейнер, чтобы активный элемент был в центре
      animationValue = item.offsetLeft - (container.offsetWidth - item.offsetWidth) / 2 + INNER_PADDING;
    }

    return animationValue;
  };

  (0, _react.useEffect)(function () {
    var setPositionFn = setPosition.current;
    var rootNode = rootEl.current;
    var menuNode = menuEl.current;
    var activeNode = activeEl.current;

    if (setPositionFn && rootNode && menuNode && activeNode) {
      setPositionFn(calcScrollPosition(rootNode, menuNode, activeNode), false);
    }
  }, [activeIndex, setPosition]);
  return /*#__PURE__*/_react.default.createElement("div", Object.assign({
    ref: rootEl
  }, (0, _dataQa.default)(props)), /*#__PURE__*/_react.default.createElement(_scrollBlock.default, {
    getControllers: getScrollController,
    innerPadding: INNER_PADDING
  }, /*#__PURE__*/_react.default.createElement("nav", {
    className: _MobileMenuModule.default.menu,
    ref: menuEl
  }, items.map(function (itemProps, index) {
    return /*#__PURE__*/_react.default.createElement(_MobileMenuItem.default, Object.assign({
      key: itemProps.id || index,
      ref: index === activeIndex ? activeEl : null,
      underlined: underlined,
      onClick: onClick
    }, itemProps));
  }))));
};

MobileMenu.defaultProps = {
  dataQaType: 'uikit/navigation.mobileMenu'
};
var _default = MobileMenu;
exports.default = _default;