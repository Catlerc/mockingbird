import React, { useCallback, useRef, useState } from 'react';
import cn from 'classnames';
import dataQa from '@platform-ui/dataQa';
import NavMenuIcon from '@platform-ui/iconsPack/interface/24/NavMenu';
import generateId from '@platform-ui/generateId';
import MobilePopup from '../MobilePopup';
import AccordionMenu from '../AccordionMenu';
import { useNavigationContext } from '../NavigationContext';
import styles from './AccordionPopup.module.css';

const AccordionPopup = props => {
  const {
    logo,
    items,
    onClick,
    onShow,
    onHide,
    id: propsId,
    buttonAriaLabel = 'Открыть меню'
  } = props;
  const [menuVisible, setMenuVisible] = useState(false);
  const id = useRef(propsId != null ? propsId : generateId());
  const {
    theme
  } = useNavigationContext();
  return /*#__PURE__*/React.createElement("div", dataQa(props), /*#__PURE__*/React.createElement("button", {
    "data-qa-type": `${props.dataQaType}.navBurger`,
    type: "button",
    className: cn({
      [styles.navBurger]: true,
      [styles[`navBurger_theme_${theme}`]]: theme
    }),
    onClick: useCallback(() => {
      setMenuVisible(true);
      onShow && onShow();
    }, [onShow]),
    "aria-label": buttonAriaLabel,
    "aria-expanded": menuVisible,
    "aria-controls": id.current
  }, /*#__PURE__*/React.createElement(NavMenuIcon, null)), /*#__PURE__*/React.createElement(MobilePopup, {
    logo: logo,
    active: menuVisible,
    onClose: useCallback(() => {
      setMenuVisible(false);
      onHide && onHide();
    }, [onHide])
  }, /*#__PURE__*/React.createElement(AccordionMenu, {
    id: id.current,
    items: items,
    onClick: onClick
  })));
};

AccordionPopup.defaultProps = {
  dataQaType: 'uikit/navigation.accordionPopup'
};
export default AccordionPopup;