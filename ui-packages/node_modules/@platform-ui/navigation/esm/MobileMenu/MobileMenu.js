import React, { useRef, useMemo, useEffect } from 'react';
import dataQa from '@platform-ui/dataQa';
import ScrollBlock from '@platform-ui/scrollBlock';
import MobileMenuItem from './MobileMenuItem';
import styles from './MobileMenu.module.css';
const INNER_PADDING = 16;

const MobileMenu = props => {
  const {
    items,
    onClick,
    underlined
  } = props;
  const rootEl = useRef(null);
  const menuEl = useRef(null);
  const activeEl = useRef(null);
  const setPosition = useRef();

  const getScrollController = ({
    setScrollPosition
  }) => {
    setPosition.current = setScrollPosition;
  };

  const activeIndex = useMemo(() => items.findIndex(item => Boolean(item.active)), [items]);

  const calcScrollPosition = (container, menu, item) => {
    let animationValue = 0;

    if (menu.offsetWidth > container.offsetWidth) {
      // на сколько нужно проскроллить контейнер, чтобы активный элемент был в центре
      animationValue = item.offsetLeft - (container.offsetWidth - item.offsetWidth) / 2 + INNER_PADDING;
    }

    return animationValue;
  };

  useEffect(() => {
    const setPositionFn = setPosition.current;
    const rootNode = rootEl.current;
    const menuNode = menuEl.current;
    const activeNode = activeEl.current;

    if (setPositionFn && rootNode && menuNode && activeNode) {
      setPositionFn(calcScrollPosition(rootNode, menuNode, activeNode), false);
    }
  }, [activeIndex, setPosition]);
  return /*#__PURE__*/React.createElement("div", Object.assign({
    ref: rootEl
  }, dataQa(props)), /*#__PURE__*/React.createElement(ScrollBlock, {
    getControllers: getScrollController,
    innerPadding: INNER_PADDING
  }, /*#__PURE__*/React.createElement("nav", {
    className: styles.menu,
    ref: menuEl
  }, items.map((itemProps, index) => {
    return /*#__PURE__*/React.createElement(MobileMenuItem, Object.assign({
      key: itemProps.id || index,
      ref: index === activeIndex ? activeEl : null,
      underlined: underlined,
      onClick: onClick
    }, itemProps));
  }))));
};

MobileMenu.defaultProps = {
  dataQaType: 'uikit/navigation.mobileMenu'
};
export default MobileMenu;