import React, { useState } from 'react';
import Popover from '@platform-ui/popover';
import cn from 'classnames';
import dataQa from '@platform-ui/dataQa';
import IconMenu from '../Icons/Menu';
import styles from './UserDesktopRoot.module.css';
import { useNavigationContext } from '../../NavigationContext';

const UserDesktopRoot = props => {
  const {
    menuComponent,
    children: profileComponent
  } = props;
  const {
    theme
  } = useNavigationContext();
  const [popoverVisible, setPopoverVisible] = useState(false);
  const popoverBlock = /*#__PURE__*/React.createElement("div", {
    className: styles.popoverBlock
  }, /*#__PURE__*/React.createElement("div", Object.assign({
    className: styles.content
  }, dataQa(props)), /*#__PURE__*/React.createElement(React.Fragment, null, typeof profileComponent === 'function' ? profileComponent({
    closeProfilePopover: () => setPopoverVisible(false)
  }) : profileComponent)));
  return /*#__PURE__*/React.createElement("div", {
    className: styles.root
  }, menuComponent ? /*#__PURE__*/React.createElement("div", {
    className: styles.menuComponent
  }, menuComponent, /*#__PURE__*/React.createElement("div", {
    className: styles.divider
  })) : null, /*#__PURE__*/React.createElement("div", {
    className: styles.popover
  }, /*#__PURE__*/React.createElement(Popover, {
    toggleOnClick: true,
    isActive: popoverVisible,
    direction: "right",
    popoverBlock: popoverBlock,
    closeOnPopoverClick: false,
    onShow: () => setPopoverVisible(true),
    onClose: () => setPopoverVisible(false)
  }, /*#__PURE__*/React.createElement("div", {
    className: cn(styles.icon, {
      [styles.icon_active]: popoverVisible,
      [styles[`icon_theme_${theme}`]]: theme
    })
  }, /*#__PURE__*/React.createElement(IconMenu, null)))));
};

export default UserDesktopRoot;