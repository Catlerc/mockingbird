import type { ComponentProps } from 'react';
export declare const RadioBlockStateless: (props: Omit<import("./Block").BlockProps, "input"> & Omit<import("@platform-ui/radio").RadioStatelessProps, keyof import("./Block").BlockProps>) => JSX.Element;
export declare type RadioBlockStatelessProps = ComponentProps<typeof RadioBlockStateless>;
export declare const RadioBlock: import("react").ForwardRefExoticComponent<Omit<Omit<import("./Block").BlockProps, "input"> & Omit<import("@platform-ui/radio").RadioStatelessProps, keyof import("./Block").BlockProps>, keyof import("@platform-ui/stateUtils").CheckableInputPropsConstraint<any, import("@platform-ui/stateUtils").ChangeParams, any, import("@platform-ui/stateUtils").ChangeParams, any, import("@platform-ui/stateUtils").ChangeParams>> & Partial<Pick<Omit<import("./Block").BlockProps, "input"> & Omit<import("@platform-ui/radio").RadioStatelessProps, keyof import("./Block").BlockProps>, keyof import("@platform-ui/stateUtils").CheckableInputPropsConstraint<any, import("@platform-ui/stateUtils").ChangeParams, any, import("@platform-ui/stateUtils").ChangeParams, any, import("@platform-ui/stateUtils").ChangeParams>>> & {
    defaultChecked?: boolean | undefined;
} & import("react").RefAttributes<never>>;
export declare type RadioBlockProps = ComponentProps<typeof RadioBlock>;
