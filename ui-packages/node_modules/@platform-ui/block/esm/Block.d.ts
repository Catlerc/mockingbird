import React from 'react';
import type { DataQaInterface } from '@platform-ui/dataQa';
export interface BlockProps extends DataQaInterface {
    /**
     * Инпут
     */
    input: React.ReactNode;
    /**
     * Серый заголовок сверху
     */
    title?: string;
    /**
     * Основной текст
     */
    label?: React.ReactNode;
    /**
     * Серый текст под основным
     */
    description?: React.ReactNode;
    /**
     * Иконка.
     * Рекомендованные размеры: 16px для `s`, 24px для `m`, 32px для `l` и 48px для `xl`
     */
    icon?: React.ReactNode;
    /**
     * Слот для иконки с подсказкой
     */
    hintBlock?: React.ReactNode;
    /**
     * Кастомное содержимое, стоит использовать для нестандартной раскладки элементов внутри блока.
     *
     * Если задано, то `title`, `label`, `description`, `icon` и `hintBlock` игнорируются
     */
    children?: React.ReactNode;
    /**
     * Размер
     *
     * `"s"` – блок от 32px, контрол 16px (s)
     *
     * `"m"` – блок от 44px, контрол 16px (s)
     *
     * `"l"` – блок от 56px, контрол 24px (l)
     *
     * `"xl"` – блок от 80px, контрол 24px (l)'
     * @default "l"
     */
    size?: 's' | 'm' | 'l' | 'xl';
    /**
     * Тип границы
     *
     * `"around"` – граница вокруг блока со скруглениями
     *
     * `"under"` – граница снизу блока, без боковых отступов
     *
     * @default "around"
     */
    borderType?: 'around' | 'under';
    /**
     * Выравнивание секций содержимого
     *
     * `"smart"` - по центру при минимальной высоте, далее по верхнему краю
     *
     * `"top"` – по верхнему краю
     *
     * `"center" – по центру
     *
     * @default "smart"
     */
    alignSections?: 'smart' | 'top' | 'center';
    disabled?: boolean;
    /**
     * Флаг указывает, что компонент находится в группе
     */
    inGroup?: boolean;
    /**
     * Направление в группе
     */
    vertical?: boolean;
    /**
     * Позволяет убирать скругления углов.
     * Формат значения аналогичен `border-radius`, например:
     *
     * `"true"` – спрямить все углы
     *
     * `"true false false true"` – спрямить левый верхний и левый нижний
     */
    flatCorners?: string;
    /**
     * Включает отступы при отображении в группе
     */
    separated?: boolean;
    /**
     * Меняет направление позиционирование элементов
     */
    reverse?: boolean;
}
declare const Block: (props: BlockProps) => JSX.Element;
export default Block;
