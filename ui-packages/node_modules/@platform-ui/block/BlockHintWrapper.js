"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

exports.__esModule = true;
exports.BlockHintWrapper = void 0;

var _react = _interopRequireDefault(require("react"));

var _dataQa = _interopRequireDefault(require("@platform-ui/dataQa"));

var _BlockModule = _interopRequireDefault(require("./Block.module.css"));

var handleClick = function handleClick(event) {
  /**
   * [UIKIT-5228]
   * Если target находится в портале, то клик не всплывёт до лейбла и ничего делать не нужно
   * Если же он находится внутри currentTarget (т.е. BlockHintWrapper),
   * то в нём нет никаких интерактивных элементов и можно смело делать preventDefault
   */
  if (event.currentTarget.contains(event.target)) {
    event.preventDefault();
  }
};

var BlockHintWrapper = /*#__PURE__*/_react.default.memo(function (props) {
  var _props$dataQaType = props.dataQaType,
      dataQaType = _props$dataQaType === void 0 ? 'uikit/block.blockHintWrapper' : _props$dataQaType,
      children = props.children;
  return /*#__PURE__*/_react.default.createElement("div", Object.assign({}, (0, _dataQa.default)({
    dataQaType: dataQaType
  }), {
    className: _BlockModule.default.hintBlock,
    onClick: handleClick
  }), children);
});

exports.BlockHintWrapper = BlockHintWrapper;