import React from 'react';
import { BlockProps } from './Block';
export interface BlockInputProps {
    size?: 's' | 'l';
    disabled?: boolean;
    dataQaType?: any | never;
    icon?: any | never;
    title?: any | never;
    label?: any | never;
    description?: any | never;
    hintBlock?: any | never;
    vertical?: any | never;
    reverse?: any | never;
    inGroup?: any | never;
    separated?: any | never;
    flatCorners?: any | never;
    borderType?: any | never;
    alignSections?: any | never;
    children?: any | never;
}
declare type WithBlockProps<TProps extends BlockInputProps> = Omit<BlockProps, 'input'> & Omit<TProps, keyof BlockProps>;
export declare const withBlock: <TProps extends BlockInputProps>(Component: React.ComponentType<TProps>, defaults?: {
    dataQaType?: string;
}) => (props: WithBlockProps<TProps>) => JSX.Element;
export {};
