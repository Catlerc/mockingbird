import React, { useCallback } from 'react';
import hoistStatics from 'hoist-non-react-statics';
import FormRow from './FormRow/FormRow';

const getName = Component => `FormBuilderFieldHOC(${Component.displayName || Component.name || 'Component(!)'})`;

const FormBuilderFieldHOC = WrappedComponent => {
  const FormBuilderField = props => {
    const {
      onChange
    } = props;
    const handleChange = useCallback((event, {
      value
    }) => {
      onChange(value);
    }, [onChange]);
    return /*#__PURE__*/React.createElement(FormRow, props, /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({}, props, {
      onChange: handleChange
    })));
  };

  FormBuilderField.displayName = getName(WrappedComponent);
  return hoistStatics(FormBuilderField, WrappedComponent);
};

export default FormBuilderFieldHOC;