import { useMemo } from 'react';
import { pickFirstDefined, splitShorthandProperty, createPropsPicker, createPropsHook } from '../utils';
export const pickPaddingProps = createPropsPicker(['padding', 'paddingX', 'paddingY', 'paddingTop', 'paddingLeft', 'paddingRight', 'paddingBottom']);
export const calcPaddingStyle = props => {
  const {
    padding: p,
    paddingX: pX,
    paddingY: pY,
    paddingTop: pTop,
    paddingLeft: pLeft,
    paddingRight: pRight,
    paddingBottom: pBottom
  } = props;
  const pA = splitShorthandProperty(p);
  const paddingTop = pickFirstDefined(pTop, pY, pA[0]);
  const paddingLeft = pickFirstDefined(pLeft, pX, pA[3], pA[1], pA[0]);
  const paddingRight = pickFirstDefined(pRight, pX, pA[1], pA[0]);
  const paddingBottom = pickFirstDefined(pBottom, pY, pA[2], pA[0]);
  return {
    paddingTop,
    paddingLeft,
    paddingRight,
    paddingBottom
  };
};
export const usePaddingStyle = props => {
  const {
    padding,
    paddingX,
    paddingY,
    paddingTop,
    paddingLeft,
    paddingRight,
    paddingBottom
  } = props;
  return useMemo(() => calcPaddingStyle({
    padding,
    paddingX,
    paddingY,
    paddingTop,
    paddingLeft,
    paddingRight,
    paddingBottom
  }), [padding, paddingX, paddingY, paddingTop, paddingLeft, paddingRight, paddingBottom]);
};
export const usePaddingProps = createPropsHook(pickPaddingProps, usePaddingStyle);