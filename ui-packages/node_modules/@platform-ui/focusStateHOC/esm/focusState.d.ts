import React from 'react';
export interface IFocusProps<TOnFocus extends Function, TOnBlur extends Function> {
    disabled?: boolean;
    focused?: boolean;
    onBlur?: TOnBlur;
    onFocus?: TOnFocus;
}
export declare type WithOptionalFocus<TOnFocus extends Function, TOnBlur extends Function, TProps extends IFocusProps<TOnFocus, TOnBlur>> = Omit<TProps, keyof IFocusProps<TOnFocus, TOnBlur>> & Partial<IFocusProps<TOnFocus, TOnBlur>>;
declare const focusState: <TOnBlur extends Function, TOnFocus extends Function, TProps extends IFocusProps<TOnFocus, TOnBlur>>(WrappedComponent: React.ComponentType<TProps>) => React.ComponentType<WithOptionalFocus<TOnFocus, TOnBlur, TProps>>;
export default focusState;
