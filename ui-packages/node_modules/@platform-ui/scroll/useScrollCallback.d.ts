/// <reference types="react" />
import type { ScrollProps } from './index';
interface ScrollParams {
    /**
     * Флаг вызова callback'ов при первом рендере.
     */
    callOnFirstRender?: boolean;
    /**
     * Отступ сверху, при котором сработает onScrollTop.
     */
    topOffset?: number;
    /**
     * Отступ снизу, при котором сработает onScrollBottom.
     */
    bottomOffset?: number;
    /**
     * Отступ слева, при котором сработает onScrollLeft.
     */
    leftOffset?: number;
    /**
     * Отступ справа, при котором сработает onScrollRight.
     */
    rightOffset?: number;
    /**
     * Основной callback onScroll, который срабатывает независимо от позиции.
     */
    onScroll?: ScrollProps['onScroll'];
    /**
     * Callback, который срабатывает при достижении верхнего отступа.
     */
    onScrollTop?: ScrollProps['onScroll'];
    /**
     * Callback, который срабатывает при достижении нижнего отступа.
     */
    onScrollBottom?: ScrollProps['onScroll'];
    /**
     * Callback, который срабатывает при достижении левого отступа.
     */
    onScrollLeft?: ScrollProps['onScroll'];
    /**
     * Callback, который срабатывает при достижении правого отступа.
     */
    onScrollRight?: ScrollProps['onScroll'];
}
export declare const useScrollCallback: (params: ScrollParams) => {
    onScroll: (event: import("react").UIEvent<Element, UIEvent> | undefined, params: {
        scrollTop: number;
        scrollLeft: number;
        scrollWidth: number;
        scrollHeight: number;
        clientWidth: number;
        clientHeight: number;
    }) => void;
};
export {};
