"use strict";

exports.__esModule = true;
exports.setRef = exports.findPortalExitByName = exports.findPortalExit = exports.findClosestPortalExit = void 0;

var _constants = require("./constants");

var setRef = function setRef(ref, value) {
  if (!ref) {
    return;
  }

  if (typeof ref === 'function') {
    ref(value);
  } else {
    // eslint-disable-next-line no-param-reassign
    ref.current = value;
  }
};

exports.setRef = setRef;

var findClosestPortalExit = function findClosestPortalExit(el) {
  var portalWrapper = el.closest("[" + _constants.PORTAL_WRAPPER_ATTR_NAME + "]");

  if (!portalWrapper) {
    return document.body;
  }

  var portalExit = portalWrapper.querySelector("[" + _constants.PORTAL_EXIT_ATTR_NAME + "]");
  return portalExit || document.body;
};

exports.findClosestPortalExit = findClosestPortalExit;

var findPortalExitByName = function findPortalExitByName(name) {
  if (name === 'body') {
    return document.body;
  }

  var portalExit = document.querySelector("[" + _constants.PORTAL_EXIT_ATTR_NAME + "=" + name + "]");
  return portalExit || document.body;
};

exports.findPortalExitByName = findPortalExitByName;

var findPortalExit = function findPortalExit(anchor, to) {
  if (!to) {
    return findClosestPortalExit(anchor);
  }

  if (typeof to === 'string') {
    return findPortalExitByName(to);
  }

  return document.body;
};

exports.findPortalExit = findPortalExit;