import { useState, useCallback } from 'react';
export const useAnimationDisabled = params => {
  const [propertyDisabled, setPropertyDisabled] = useState(false);
  const property = (params == null ? void 0 : params.property) || 'animation';
  const setRef = useCallback(node => {
    if (node) {
      const style = window.getComputedStyle(node);
      const duration = style.getPropertyValue(`${property}-duration`);
      setPropertyDisabled(duration.length <= 2 && parseFloat(duration) === 0);
    }
  }, [property]);
  return [setRef, Boolean(propertyDisabled || (params == null ? void 0 : params.disabled))];
};