import { useState, useRef, useEffect } from 'react';
export const useElementSize = ref => {
  const [size, setSize] = useState(null);
  const observer = useRef(null);
  useEffect(() => {
    if (typeof ResizeObserver !== 'undefined') {
      observer.current = new ResizeObserver(entries => {
        const {
          width,
          height
        } = entries[0].contentRect;
        setSize({
          width,
          height
        });
      });
    }

    if (ref.current) {
      if (observer.current) {
        observer.current.observe(ref.current);
      } else {
        const {
          width,
          height
        } = ref.current.getBoundingClientRect();
        setSize({
          width,
          height
        });
      }
    }

    return () => {
      if (observer.current) {
        observer.current.disconnect();
      }
    };
  }, [ref]);
  return size;
};