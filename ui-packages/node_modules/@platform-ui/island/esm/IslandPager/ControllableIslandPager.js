import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
const _excluded = ["onChange", "activeIndex", "children", "autoHeight", "formatPaginationText"];
import React, { Children } from 'react';
import Carousel from '@platform-ui/carousel';
import Island from '../Island';
import { DEFAULT_PROPS } from '../types';
import styles from './IslandPager.module.css';
import IslandPagerButton from './IslandPagerButton';

const ControllableIslandPager = props => {
  const {
    onChange,
    activeIndex,
    children,
    autoHeight = false,
    formatPaginationText = (currentPage, totalPages) => `${currentPage} из ${totalPages}`
  } = props,
        restProps = _objectWithoutPropertiesLoose(props, _excluded);

  const childrenCount = Children.count(children);
  const paginationText = formatPaginationText(activeIndex + 1, childrenCount);

  const handleUpdateActiveIndexByCarousel = index => {
    onChange(index);
  };

  const handlePrevClick = () => {
    onChange(activeIndex - 1);
  };

  const handleNextClick = () => {
    onChange(activeIndex + 1);
  };

  return /*#__PURE__*/React.createElement(Island, restProps, /*#__PURE__*/React.createElement("header", {
    className: styles.header
  }, /*#__PURE__*/React.createElement(IslandPagerButton, {
    direction: "left",
    disabled: activeIndex === 0,
    onClick: handlePrevClick
  }), /*#__PURE__*/React.createElement(IslandPagerButton, {
    direction: "right",
    disabled: activeIndex === childrenCount - 1,
    onClick: handleNextClick
  }), /*#__PURE__*/React.createElement("span", {
    className: styles.counter
  }, paginationText)), /*#__PURE__*/React.createElement(Carousel, {
    activeIndex: activeIndex,
    setActive: handleUpdateActiveIndexByCarousel,
    autoHeight: autoHeight
  }, children));
};

ControllableIslandPager.defaultProps = DEFAULT_PROPS;
export default ControllableIslandPager;