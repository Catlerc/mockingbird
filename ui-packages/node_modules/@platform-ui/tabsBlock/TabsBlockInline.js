"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _TabsBlockButton = _interopRequireDefault(require("./TabsBlockButton/TabsBlockButton"));

var _utils = require("./utils");

var _TabsBlockModule = _interopRequireDefault(require("./TabsBlock.module.css"));

var _excluded = ["title", "onClick", "additionalContent"];

var TabsBlockInline = function TabsBlockInline(props) {
  var _cn;

  var items = props.items,
      activeIndex = props.activeIndex,
      disabled = props.disabled,
      _props$size = props.size,
      size = _props$size === void 0 ? 'm' : _props$size,
      align = props.align,
      width = props.width,
      onItemClick = props.onItemClick;
  var buttonStyle = align === 'stretch' ? {
    flex: 1
  } : {};
  return /*#__PURE__*/_react.default.createElement("div", {
    style: {
      width: width
    },
    className: (0, _classnames.default)((_cn = {}, _cn[_TabsBlockModule.default.inline] = true, _cn[_TabsBlockModule.default["inline_align_" + align]] = _TabsBlockModule.default["inline_align_" + align], _cn))
  }, items.map(function (_ref, index) {
    var title = _ref.title,
        onClick = _ref.onClick,
        additionalContent = _ref.additionalContent,
        item = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);
    return /*#__PURE__*/_react.default.createElement(_TabsBlockButton.default, Object.assign({}, buttonStyle, item, {
      key: (0, _utils.getKey)((0, _extends2.default)({
        title: title,
        additionalContent: additionalContent
      }, item), index),
      size: size,
      checked: index === activeIndex,
      disabled: item.disabled || disabled,
      first: index === 0,
      last: index === items.length - 1,
      afterActive: index === activeIndex + 1,
      onClick: (0, _utils.getOnClickHandler)([onItemClick, onClick], index, title)
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: _TabsBlockModule.default.content
    }, title), additionalContent && /*#__PURE__*/_react.default.createElement("div", {
      className: _TabsBlockModule.default.additionalContent
    }, additionalContent));
  }));
};

var _default = TabsBlockInline;
exports.default = _default;