"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _ArrowDown = _interopRequireDefault(require("@platform-ui/iconsPack/interface/24/ArrowDown"));

var _contextMenu = _interopRequireDefault(require("@platform-ui/contextMenu"));

var _tabsLayout = _interopRequireDefault(require("@platform-ui/tabsLayout"));

var _TabsBlockButton = _interopRequireDefault(require("./TabsBlockButton/TabsBlockButton"));

var _TabsBlockCompact = _interopRequireDefault(require("./TabsBlockCompact"));

var _utils = require("./utils");

var _TabsBlockModule = _interopRequireDefault(require("./TabsBlock.module.css"));

var _excluded = ["title", "additionalContent", "onClick"];

var TabsBlock = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2.default)(TabsBlock, _PureComponent);

  function TabsBlock(props) {
    var _this;

    _this = _PureComponent.call(this, props) || this;

    _this.handleItemsVisibilityChange = function (_, _ref) {
      var itemsVisibility = _ref.itemsVisibility;

      _this.setState({
        itemsVisibility: itemsVisibility
      });
    };

    var _props$items = props.items,
        items = _props$items === void 0 ? [] : _props$items;
    _this.state = {
      itemsVisibility: items.map(function () {
        return true;
      })
    };
    return _this;
  }

  var _proto = TabsBlock.prototype;

  _proto.getContextMenuItems = function getContextMenuItems() {
    var itemsVisibility = this.state.itemsVisibility;
    return (0, _utils.getContextMenuItems)(this.props).filter(function (item, index) {
      return !itemsVisibility[index];
    });
  };

  _proto.renderMoreButton = function renderMoreButton() {
    var _this$props = this.props,
        size = _this$props.size,
        disabled = _this$props.disabled,
        activeIndex = _this$props.activeIndex,
        showMoreOnHover = _this$props.showMoreOnHover,
        moreButtonText = _this$props.moreButtonText,
        moreButtonContent = _this$props.moreButtonContent,
        rearrangeActiveElem = _this$props.rearrangeActiveElem;
    var itemsVisibility = this.state.itemsVisibility;
    var items = this.getContextMenuItems();
    var afterActive = itemsVisibility.lastIndexOf(true) === activeIndex;
    var content = typeof moreButtonContent === 'function' ? moreButtonContent(moreButtonText) : moreButtonContent;
    return /*#__PURE__*/_react.default.createElement(_contextMenu.default, {
      hideOnResize: true,
      items: items,
      showOnHover: showMoreOnHover,
      itemSize: {
        l: 'l',
        m: 'm',
        s: 'xs'
      }[size]
    }, /*#__PURE__*/_react.default.createElement(_TabsBlockButton.default, {
      size: size,
      last: true,
      disabled: disabled,
      afterActive: afterActive,
      checked: !rearrangeActiveElem && itemsVisibility[activeIndex] === false,
      tabIndex: -1
    }, content));
  };

  _proto.render = function render() {
    var _classNames;

    var _this$props2 = this.props,
        size = _this$props2.size,
        align = _this$props2.align,
        onItemClick = _this$props2.onItemClick,
        activeIndex = _this$props2.activeIndex,
        items = _this$props2.items,
        disabled = _this$props2.disabled,
        mobileSingleButton = _this$props2.mobileSingleButton,
        backgroundColor = _this$props2.backgroundColor,
        rearrangeActiveElem = _this$props2.rearrangeActiveElem,
        moreButtonWidth = _this$props2.moreButtonWidth;
    var itemsVisibility = this.state.itemsVisibility;
    var firstVisibleIndex = itemsVisibility.indexOf(true);
    var lastIndex = items.length - 1;
    var indexBeforeActive = activeIndex - 1;

    while (itemsVisibility[indexBeforeActive] === false) {
      indexBeforeActive--;
    }

    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, mobileSingleButton && /*#__PURE__*/_react.default.createElement("div", {
      className: _TabsBlockModule.default.hiddenOnTabletAndDesktop
    }, /*#__PURE__*/_react.default.createElement(_TabsBlockCompact.default, this.props)), /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)((_classNames = {}, _classNames[_TabsBlockModule.default.hiddenOnPhone] = mobileSingleButton, _classNames))
    }, /*#__PURE__*/_react.default.createElement(_tabsLayout.default, {
      align: align,
      height: {
        s: 32,
        m: 44,
        l: 56
      }[size],
      moreButtonWidth: moreButtonWidth || {
        s: 80,
        m: 100,
        l: 124
      }[size],
      moreButton: this.renderMoreButton(),
      activeIndex: activeIndex,
      backgroundColor: backgroundColor,
      rearrangeActiveElem: rearrangeActiveElem && activeIndex <= lastIndex,
      onItemsVisibilityChange: this.handleItemsVisibilityChange
    }, items.map(function (_ref2, index) {
      var title = _ref2.title,
          additionalContent = _ref2.additionalContent,
          onClick = _ref2.onClick,
          item = (0, _objectWithoutPropertiesLoose2.default)(_ref2, _excluded);
      return /*#__PURE__*/_react.default.createElement(_TabsBlockButton.default, Object.assign({}, item, {
        key: (0, _utils.getKey)((0, _extends2.default)({
          title: title,
          additionalContent: additionalContent
        }, item), index),
        tabIndex: -1,
        size: size,
        checked: index === activeIndex,
        disabled: disabled || item.disabled,
        first: index === firstVisibleIndex,
        last: itemsVisibility.every(function (i) {
          return i;
        }) && lastIndex === index,
        afterActive: index === activeIndex + 1,
        beforeActive: index === indexBeforeActive && activeIndex <= lastIndex,
        onClick: (0, _utils.getOnClickHandler)([onItemClick, onClick], index, title)
      }), /*#__PURE__*/_react.default.createElement("div", {
        className: _TabsBlockModule.default.content
      }, title), additionalContent && /*#__PURE__*/_react.default.createElement("div", {
        className: _TabsBlockModule.default.additionalContent
      }, additionalContent));
    }))));
  };

  return TabsBlock;
}(_react.PureComponent);

TabsBlock.defaultProps = {
  size: 'm',
  items: [],
  activeIndex: 0,
  align: 'left',
  rearrangeActiveElem: true,
  backgroundColor: 'var(--tds-color-base-01, #fff)',
  moreButtonText: 'Ещё',
  moreButtonContent: function moreButtonContent(text) {
    return /*#__PURE__*/_react.default.createElement(_react.Fragment, null, text, /*#__PURE__*/_react.default.createElement("span", {
      className: _TabsBlockModule.default.icon
    }, /*#__PURE__*/_react.default.createElement(_ArrowDown.default, null)));
  }
};
var _default = TabsBlock;
exports.default = _default;