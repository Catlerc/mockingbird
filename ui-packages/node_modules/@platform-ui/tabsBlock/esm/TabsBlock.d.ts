import React, { PureComponent } from 'react';
import type { TabsLayoutProps } from '@platform-ui/tabsLayout';
import type { Size, Item, OnItemClick } from './types';
export declare type TabsBlockProps = {
    /**
     * Размер элементов в группе
     */
    size: Size;
    /**
     * Индекс активного элемента
     */
    activeIndex: number;
    /**
     * Массив элементов меню
     */
    items: Item[];
    /**
     * Обработчик события onChange
     */
    onItemClick?: OnItemClick;
    /**
     * Флаг, включающий отдельный вариант отображения для мобильных устройств
     */
    mobileSingleButton?: boolean;
    /**
     * Флаг, делающий все элементы disabled
     */
    disabled?: boolean;
    /**
     * Флаг, включающий открытие контекстного меню по ховеру
     */
    showMoreOnHover?: boolean;
    /**
     * Флаг, включающий перестраивание активного элемента из выпадающего меню перед "Еще" (не работает при SSR)
     */
    rearrangeActiveElem?: boolean;
    /**
     * Содержимое кнопки "Ещё"
     */
    moreButtonContent: React.ReactNode | ((text: string) => React.ReactNode);
    /**
     * Текст кноопки "Ещё"
     */
    moreButtonText: string;
    /**
     * Ширина кнопки "Ещё".
     * Имеет смысл задавать при кастомном содержимом.
     * Позволяет более правильно отрендерить компонент до инициализации на клиенте
     */
    moreButtonWidth?: number;
    /**
     *  Нужен для корректного отображения верстки
     */
    backgroundColor: string;
    /**
     * Горизонтальное выравнивание
     */
    align: 'left' | 'right';
};
declare type TabsBlockState = {
    itemsVisibility: boolean[];
};
declare class TabsBlock extends PureComponent<TabsBlockProps, TabsBlockState> {
    constructor(props: TabsBlockProps);
    static defaultProps: {
        size: string;
        items: never[];
        activeIndex: number;
        align: string;
        rearrangeActiveElem: boolean;
        backgroundColor: string;
        moreButtonText: string;
        moreButtonContent: (text: string) => JSX.Element;
    };
    handleItemsVisibilityChange: TabsLayoutProps['onItemsVisibilityChange'];
    getContextMenuItems(): {
        additionalContent: React.ReactNode;
        disabled: boolean | undefined;
        title: string;
        onClick: (e: React.MouseEvent<Element, MouseEvent>) => void;
        active: boolean; /**
         * Массив элементов меню
         */
    }[];
    renderMoreButton(): JSX.Element;
    render(): JSX.Element;
}
export default TabsBlock;
