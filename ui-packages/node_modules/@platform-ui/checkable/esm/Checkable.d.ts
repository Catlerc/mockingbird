import React from 'react';
import type { InputHTMLAttributes } from 'react';
import type { CheckableInputProps } from '@platform-ui/types';
import type { DataQaInterface } from '@platform-ui/dataQa';
declare type NonCheckableInputAttributes = 'accept' | 'alt' | 'capture' | 'crossOrigin' | 'enterKeyHint' | 'formAction' | 'formEncType' | 'formMethod' | 'formNoValidate' | 'formTarget' | 'height' | 'list' | 'max' | 'maxLength' | 'min' | 'minLength' | 'multiple' | 'pattern' | 'placeholder' | 'readOnly' | 'size' | 'src' | 'step' | 'type' | 'width' | 'children';
declare type Overrides = 'value' | 'type' | 'onBlur' | 'onFocus' | 'onChange';
export interface CheckableProps extends DataQaInterface, CheckableInputProps, Omit<InputHTMLAttributes<HTMLInputElement>, NonCheckableInputAttributes | Overrides | keyof CheckableInputProps> {
    type: 'checkbox' | 'radio';
}
declare const Checkable: React.ForwardRefExoticComponent<CheckableProps & React.RefAttributes<HTMLInputElement>>;
export default Checkable;
