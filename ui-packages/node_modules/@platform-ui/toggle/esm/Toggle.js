import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
const _excluded = ["dataQaType", "size", "theme", "loading", "withIcons", "inputAttrs", "color"];
import React, { Fragment } from 'react';
import cn from 'classnames';
import dataQa from '@platform-ui/dataQa';
import Tip16 from '@platform-ui/iconsPack/interface/16/Tip';
import Tip24 from '@platform-ui/iconsPack/interface/24/Tip';
import Checkable from '@platform-ui/checkable';
import { withCheckableInputState } from '@platform-ui/stateUtils';
import styles from './Toggle.module.css';
export const ToggleStateless = props => {
  const {
    dataQaType = 'uikit/toggle',
    size = 'l',
    theme = 'default',
    loading,
    withIcons = true,
    inputAttrs,
    color
  } = props,
        inputProps = _objectWithoutPropertiesLoose(props, _excluded);

  return /*#__PURE__*/React.createElement("span", Object.assign({}, dataQa({
    dataQaType
  }), {
    className: cn(styles.root, styles[`root_size_${size}`], styles[`root_theme_${theme}`], {
      [styles.root_loading]: loading
    })
  }), /*#__PURE__*/React.createElement(Checkable, Object.assign({}, inputAttrs, inputProps, {
    dataQaType: `${dataQaType}.input`,
    type: "checkbox",
    className: styles.input,
    style: inputProps.checked && color ? {
      backgroundColor: color
    } : undefined
  })), withIcons && /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement("span", {
    className: cn(styles.icon, styles.icon_type_checked)
  }, size === 's' ? /*#__PURE__*/React.createElement(Tip16, null) : /*#__PURE__*/React.createElement(Tip24, null)), /*#__PURE__*/React.createElement("span", {
    className: cn(styles.icon, styles.icon_type_unchecked)
  })), /*#__PURE__*/React.createElement("span", {
    className: cn(styles.icon, styles.icon_type_loading)
  }));
};
const Toggle = withCheckableInputState(ToggleStateless);
export default Toggle;