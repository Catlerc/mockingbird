import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
const _excluded = ["ariaBusy", "dataQaData", "dataQaType", "flatCorners", "inGroup", "isButtonLink", "progressiveFill", "round", "type", "unselectable", "uppercase", "vertical", "wide", "wideDesktopL", "wideDesktopM", "wideDesktopS", "wideTabletL", "wideTabletS", "innerRef"],
      _excluded2 = ["children", "disabled", "theme", "icon", "onClick", "onMouseOver", "onMouseLeave", "href"],
      _excluded3 = ["ariaLabel", "disableHorizontalPadding", "size"];
import React, { forwardRef } from 'react';
import omit from '@tinkoff/utils/object/omit';
import Link from '@platform-ui/link';
import Button from './Button';
const ButtonLink = /*#__PURE__*/forwardRef((_ref, ref) => {
  let {
    dataQaData,
    dataQaType,
    progressiveFill,
    uppercase,
    wide,
    wideDesktopL,
    wideDesktopM,
    wideDesktopS,
    wideTabletL,
    wideTabletS,
    innerRef
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, _excluded);

  const buttonProps = _objectWithoutPropertiesLoose(props, _excluded2);

  const linkProps = _objectWithoutPropertiesLoose(props, _excluded3);

  return /*#__PURE__*/React.createElement(Button, Object.assign({}, buttonProps, {
    dataQaData: dataQaData,
    dataQaType: dataQaType,
    isButtonLink: true,
    progressiveFill: progressiveFill,
    tabIndex: -1,
    tagName: "div",
    uppercase: uppercase,
    wide: wide,
    wideDesktopL: wideDesktopL,
    wideDesktopM: wideDesktopM,
    wideDesktopS: wideDesktopS,
    wideTabletL: wideTabletL,
    wideTabletS: wideTabletS
  }), /*#__PURE__*/React.createElement(Link, Object.assign({}, linkProps, {
    ref: ref,
    innerRef: innerRef
  })));
});
ButtonLink.defaultProps = _extends({}, omit(['theme'], Button.defaultProps)); // TODO: разобраться как подружить сборку TS и displayName

ButtonLink.displayName = 'ButtonLink';
export default ButtonLink;