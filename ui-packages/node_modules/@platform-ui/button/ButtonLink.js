"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _omit = _interopRequireDefault(require("@tinkoff/utils/object/omit"));

var _link = _interopRequireDefault(require("@platform-ui/link"));

var _Button = _interopRequireDefault(require("./Button"));

var _excluded = ["ariaBusy", "dataQaData", "dataQaType", "flatCorners", "inGroup", "isButtonLink", "progressiveFill", "round", "type", "unselectable", "uppercase", "vertical", "wide", "wideDesktopL", "wideDesktopM", "wideDesktopS", "wideTabletL", "wideTabletS", "innerRef"],
    _excluded2 = ["children", "disabled", "theme", "icon", "onClick", "onMouseOver", "onMouseLeave", "href"],
    _excluded3 = ["ariaLabel", "disableHorizontalPadding", "size"];
var ButtonLink = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var ariaBusy = _ref.ariaBusy,
      dataQaData = _ref.dataQaData,
      dataQaType = _ref.dataQaType,
      flatCorners = _ref.flatCorners,
      inGroup = _ref.inGroup,
      isButtonLink = _ref.isButtonLink,
      progressiveFill = _ref.progressiveFill,
      round = _ref.round,
      type = _ref.type,
      unselectable = _ref.unselectable,
      uppercase = _ref.uppercase,
      vertical = _ref.vertical,
      wide = _ref.wide,
      wideDesktopL = _ref.wideDesktopL,
      wideDesktopM = _ref.wideDesktopM,
      wideDesktopS = _ref.wideDesktopS,
      wideTabletL = _ref.wideTabletL,
      wideTabletS = _ref.wideTabletS,
      innerRef = _ref.innerRef,
      props = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);
  var children = props.children,
      disabled = props.disabled,
      theme = props.theme,
      icon = props.icon,
      onClick = props.onClick,
      onMouseOver = props.onMouseOver,
      onMouseLeave = props.onMouseLeave,
      href = props.href,
      buttonProps = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded2);
  var ariaLabel = props.ariaLabel,
      disableHorizontalPadding = props.disableHorizontalPadding,
      size = props.size,
      linkProps = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded3);
  return /*#__PURE__*/_react.default.createElement(_Button.default, Object.assign({}, buttonProps, {
    dataQaData: dataQaData,
    dataQaType: dataQaType,
    isButtonLink: true,
    progressiveFill: progressiveFill,
    tabIndex: -1,
    tagName: "div",
    uppercase: uppercase,
    wide: wide,
    wideDesktopL: wideDesktopL,
    wideDesktopM: wideDesktopM,
    wideDesktopS: wideDesktopS,
    wideTabletL: wideTabletL,
    wideTabletS: wideTabletS
  }), /*#__PURE__*/_react.default.createElement(_link.default, Object.assign({}, linkProps, {
    ref: ref,
    innerRef: innerRef
  })));
});
ButtonLink.defaultProps = (0, _extends2.default)({}, (0, _omit.default)(['theme'], _Button.default.defaultProps)); // TODO: разобраться как подружить сборку TS и displayName

ButtonLink.displayName = 'ButtonLink';
var _default = ButtonLink;
exports.default = _default;