"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _loader = _interopRequireDefault(require("@platform-ui/loader"));

var _Button = _interopRequireDefault(require("../Button"));

var _LoadingButtonModule = _interopRequireDefault(require("./LoadingButton.module.css"));

var _excluded = ["loading", "size", "children", "icon"];

var getLoaderSize = function getLoaderSize(size) {
  if (size === 'm' || size === 's') {
    return 's';
  }

  if (size === 'xs') {
    return 'xs';
  }

  return 'm';
};

var LoadingButton = function LoadingButton(_ref) {
  var _cn, _cn2, _cn3;

  var loading = _ref.loading,
      size = _ref.size,
      children = _ref.children,
      icon = _ref.icon,
      props = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);

  var loaderSize = _react.default.useMemo(function () {
    return getLoaderSize(size);
  }, [size]);

  var LoaderIcon = /*#__PURE__*/_react.default.createElement("span", {
    className: (0, _classnames.default)((_cn = {}, _cn[_LoadingButtonModule.default.loader] = true, _cn[_LoadingButtonModule.default.hidden] = !loading, _cn))
  }, /*#__PURE__*/_react.default.createElement(_loader.default, {
    size: loaderSize,
    color: "current"
  }));
  /*
     если в кнопке помимо иконки есть контент, то в состоянии загрузки скрываем иконку
     если контента кроме иконки нет, то в сосотянии загрузки заменяем иконку на loader
  */


  return /*#__PURE__*/_react.default.createElement(_Button.default, Object.assign({}, props, {
    ariaBusy: !!loading,
    size: size,
    icon: icon ? /*#__PURE__*/_react.default.createElement("span", {
      className: (0, _classnames.default)((_cn2 = {}, _cn2[_LoadingButtonModule.default.hidden] = loading && children, _cn2))
    }, loading && !children ? LoaderIcon : icon) : null
  }), children && /*#__PURE__*/_react.default.createElement("span", null, /*#__PURE__*/_react.default.createElement("span", {
    className: (0, _classnames.default)((_cn3 = {}, _cn3[_LoadingButtonModule.default.hidden] = loading, _cn3))
  }, children), loading && LoaderIcon));
};

LoadingButton.defaultProps = (0, _extends2.default)({}, _Button.default.defaultProps); // TODO: разобраться как подружить сборку TS и displayName

LoadingButton.displayName = 'LoadingButton';
var _default = LoadingButton;
exports.default = _default;