/// <reference types="react" />
import type { PaddingProps } from '@platform-ui/styleProps';
import type { OverlayProps } from './Overlay';
import type { PaperProps } from './Paper';
import type { CloseButtonProps } from './Controls';
export declare type PopupProps = Omit<OverlayProps, 'height' | 'gapFillColor'> & PaddingProps & Omit<PaperProps, 'media' | 'minWidth'> & {
    /**
     * Высота Overlay
     */
    overlayHeight?: OverlayProps['height'];
    /**
     * Минимальная ширина компонента Paper
     */
    paperMinWidth?: PaperProps['minWidth'];
    /**
     * Тема мобильной кнопки закрытия
     * @default "onPaper"
     */
    mobileCloseButtonTheme?: CloseButtonProps['theme'];
    /**
     * Кнопка закрытия Popup
     */
    closeable?: boolean;
    /**
     * aria-label для кнопки закрытия
     */
    closeButtonAriaLabel?: string;
};
export declare const mediaMap: {
    phone: number;
    tabletS: number;
    tabletL: number;
    desktopS: number;
    desktopM: number;
};
export declare type Queries = [MediaQueryList, (event: MediaQueryListEvent) => void][];
export declare type MediaMap = typeof mediaMap;
export declare type MediaKey = keyof MediaMap;
export declare const getQuery: (map: MediaMap, keys: MediaKey[], index: number) => string;
declare const Popup: (props: PopupProps) => JSX.Element;
export default Popup;
