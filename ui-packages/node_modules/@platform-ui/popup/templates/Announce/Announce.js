"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

exports.__esModule = true;
exports.default = void 0;

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _reactUse = require("react-use");

var _classnames = _interopRequireDefault(require("classnames"));

var _button = _interopRequireWildcard(require("@platform-ui/button"));

var _mediaBreakpoints = _interopRequireDefault(require("@platform-ui/constants/mediaBreakpoints"));

var _Popup = _interopRequireDefault(require("../../Popup"));

var _AnnounceModule = _interopRequireDefault(require("./Announce.module.css"));

var _excluded = ["title", "description", "approve", "decline", "onClose", "size", "mobileSize", "coverStyle", "align"];

function Announce(_ref) {
  var _cn, _cn2, _cn3;

  var title = _ref.title,
      description = _ref.description,
      approve = _ref.approve,
      decline = _ref.decline,
      onClose = _ref.onClose,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'm' : _ref$size,
      _ref$mobileSize = _ref.mobileSize,
      mobileSize = _ref$mobileSize === void 0 ? 'sheet' : _ref$mobileSize,
      coverStyle = _ref.coverStyle,
      _ref$align = _ref.align,
      align = _ref$align === void 0 ? 'center' : _ref$align,
      otherProps = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);
  var tabletS = _mediaBreakpoints.default.tabletS;
  var mediaTablet = (0, _reactUse.useMedia)(tabletS, true);
  var handleClose = (0, _react.useCallback)(function (event, params) {
    onClose && onClose(event, {
      value: params && typeof params.value !== 'undefined' ? params.value : undefined
    });
  }, [onClose]);
  var currentView = mediaTablet ? 'desktop' : 'mobile';
  return /*#__PURE__*/_react.default.createElement(_Popup.default, Object.assign({}, otherProps, {
    size: size,
    mobileSize: mobileSize === 'fullscreen' ? 'fullscreen' : undefined,
    onClose: handleClose
  }), /*#__PURE__*/_react.default.createElement("div", {
    style: {
      display: 'flex',
      flexDirection: 'column',
      minHeight: mediaTablet || mobileSize !== 'fullscreen' ? 'auto' : 'calc(100vh - 64px)'
    }
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)(_AnnounceModule.default.cover, (_cn = {}, _cn[_AnnounceModule.default["cover_desktop-" + size]] = mediaTablet, _cn[_AnnounceModule.default.cover_mobile] = !mediaTablet, _cn)),
    style: coverStyle && coverStyle(currentView)
  }), /*#__PURE__*/_react.default.createElement("h2", {
    className: (0, _classnames.default)(_AnnounceModule.default.title, (_cn2 = {}, _cn2[_AnnounceModule.default.title_desktop] = mediaTablet, _cn2[_AnnounceModule.default.title_mobile] = !mediaTablet, _cn2)),
    style: {
      textAlign: align
    }
  }, title), /*#__PURE__*/_react.default.createElement("div", {
    className: _AnnounceModule.default.content,
    style: {
      textAlign: align
    }
  }, description), /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)(_AnnounceModule.default.buttons, (_cn3 = {}, _cn3[_AnnounceModule.default["buttons_align-" + align]] = align, _cn3))
  }, /*#__PURE__*/_react.default.createElement(_button.default, {
    size: size === 'm' && mediaTablet ? 'l' : 'm',
    wide: !mediaTablet,
    onClick: (0, _react.useCallback)(function (event) {
      handleClose(event, {
        value: true
      });
    }, [handleClose])
  }, approve), decline && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("span", {
    className: _AnnounceModule.default.separator
  }), /*#__PURE__*/_react.default.createElement(_button.ButtonLink, {
    size: size === 'm' && mediaTablet ? 'l' : 'm',
    wide: !mediaTablet,
    onClick: function onClick(event) {
      handleClose(event, {
        value: false
      });
    }
  }, decline)))));
}

var _default = Announce;
exports.default = _default;