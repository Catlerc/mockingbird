import React from 'react';
export interface TabsLayoutProps {
    /**
     * Табы
     */
    children: React.ReactNode;
    /**
     * Индекс текущего активного таба
     */
    activeIndex?: number;
    /**
     * Горизонтальное выравнивание
     */
    align?: 'left' | 'right';
    /**
     * Высота компонента в пикселях
     */
    height: number;
    /**
     * Расстояние между табами в пикселях
     */
    gap?: number;
    /**
     * Кнопка "Ещё"
     */
    moreButton: React.ReactNode | ((params: {
        index: number | null;
    }) => React.ReactNode);
    /**
     * Ширина кнопки "Ещё"
     */
    moreButtonWidth?: number;
    /**
     * Цвет фона
     */
    backgroundColor: string;
    /**
     * Должен ли активный таб всегда быть виден
     */
    rearrangeActiveElem?: boolean;
    /**
     * Обработчик изменения видимости табов
     */
    onItemsVisibilityChange: (event: null, params: {
        itemsVisibility: boolean[];
    }) => void;
}
interface TabsLayoutState {
    moreButtonWidth: number;
    tabs: React.ReactNode[];
}
declare class TabsLayout extends React.PureComponent<TabsLayoutProps, TabsLayoutState> {
    rootRef: React.RefObject<HTMLDivElement>;
    moreRef: React.RefObject<HTMLDivElement>;
    itemNodes: (HTMLDivElement | null)[];
    itemsVisibility: boolean[];
    itemRefCallbacks: ((node: HTMLDivElement | null) => void)[];
    itemsObserver?: IntersectionObserver;
    constructor(props: TabsLayoutProps);
    static defaultProps: {
        align: string;
        moreButtonWidth: number;
        gap: number;
        rearrangeActiveElem: boolean;
        activeIndex: number;
    };
    static getDerivedStateFromProps(props: TabsLayoutProps): {
        tabs: (React.ReactChild | React.ReactFragment | React.ReactPortal)[];
    };
    componentDidMount(): void;
    componentDidUpdate(prevProps: TabsLayoutProps): void;
    componentWillUnmount(): void;
    getItemRefCallback(index: number): (node: HTMLDivElement | null) => void;
    getItemPosition(index: number): "active" | "base" | "last" | "beforeLastActive" | "beforeActive";
    updateMoreWidth(): void;
    renderMoreButton(index: number | null): any;
    renderItem(tab: React.ReactNode, index: number): React.ReactNode;
    render(): JSX.Element;
}
export default TabsLayout;
