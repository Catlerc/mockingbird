/// <reference types="react" />
export declare type InputEl = HTMLInputElement;
export declare type InputAttributes = React.InputHTMLAttributes<InputEl>;
/**
 * StatelessInput types
 */
export declare type InputTypes = 'text' | 'password' | 'email' | 'number' | 'tel' | 'url' | 'search';
export declare type InputChangeEvent = React.ChangeEvent<InputEl>;
export declare type InputKeyboardEvent = React.KeyboardEvent<InputEl>;
export declare type InputFocusEvent = React.FocusEvent<InputEl>;
export declare type InputClickEvent = React.KeyboardEvent<InputEl>;
export declare type InputNameParams = {
    name?: string;
};
export declare type InputValueParams = {
    value: string;
};
export declare type InputMaskedValueParams = {
    maskedValue: string;
};
export declare type InputOnKeyDownEvent = InputKeyboardEvent;
export declare type InputOnKeyDownParams = InputNameParams;
export declare type InputOnKeyDownCallback = (event: InputOnKeyDownEvent, params: InputOnKeyDownParams) => void;
export declare type InputOnKeyPressEvent = InputKeyboardEvent;
export declare type InputOnKeyPressParams = InputNameParams;
export declare type InputOnKeyPressCallback = (event: InputOnKeyPressEvent, params: InputOnKeyPressParams) => void;
export declare type InputOnKeyUpEvent = InputKeyboardEvent;
export declare type InputOnKeyUpParams = InputNameParams;
export declare type InputOnKeyUpCallback = (event: InputOnKeyUpEvent, params: InputOnKeyUpParams) => void;
export declare type InputOnFocusEvent = InputFocusEvent;
export declare type InputOnFocusParams = InputNameParams;
export declare type InputOnFocusCallback = (event: InputOnFocusEvent, params: InputOnFocusParams) => void;
export declare type InputOnBlurEvent = InputFocusEvent;
export declare type InputOnBlurParams = InputNameParams;
export declare type InputOnBlurCallback = (event: InputOnBlurEvent, params: InputOnBlurParams) => void;
export declare type InputOnCleanEvent = InputKeyboardEvent;
export declare type InputOnCleanParams = InputNameParams & InputValueParams & {
    autofilled?: boolean;
};
export declare type InputOnCleanCallback = (event: InputOnCleanEvent, params: InputOnCleanParams) => void;
export declare type InputOnClickEvent = InputClickEvent;
export declare type InputOnClickParams = InputNameParams;
export declare type InputOnClickCallback = (event: InputOnClickEvent, params: InputOnClickParams) => void;
export declare type InputOnChangeEvent = InputChangeEvent | InputKeyboardEvent | null;
export declare type InputOnChangeParams = InputNameParams & InputValueParams & {
    autofilled?: boolean;
};
export declare type InputOnChangeCallback = (event: InputOnChangeEvent, params: InputOnChangeParams) => void;
export declare type InputOnInputEvent = InputChangeEvent;
export declare type InputOnInputParams = InputNameParams;
export declare type InputOnInputCallback = (event: InputOnInputEvent, params: InputOnInputParams) => void;
/**
 * MaskedInput types
 */
export declare type MaskedInputTypes = 'text' | 'search' | 'password' | 'tel' | 'url';
export declare type MaskedInputOnBlurEvent = InputFocusEvent;
export declare type MaskedInputOnBlurParams = InputNameParams & InputValueParams & InputMaskedValueParams;
export declare type MaskedInputOnBlurCallback = (e: MaskedInputOnBlurEvent, params: MaskedInputOnBlurParams) => void;
export declare type MaskedInputOnChangeEvent = InputOnChangeEvent;
export declare type MaskedInputOnChangeParams = InputNameParams & InputValueParams & InputMaskedValueParams & {
    pureValue: string;
    caretPosition: number;
    autofilled?: boolean;
};
export declare type MaskedInputOnChangeCallback = (e: MaskedInputOnChangeEvent, params: MaskedInputOnChangeParams) => void;
export declare type MaskedInputOnFieldDoneEvent = InputOnChangeEvent;
export declare type MaskedInputOnFieldDoneParams = InputNameParams & InputValueParams & InputMaskedValueParams;
export declare type MaskedInputOnFieldDoneCallback = (e: MaskedInputOnFieldDoneEvent, params: MaskedInputOnFieldDoneParams) => void;
export declare type MaskedInputOnFocusEvent = InputFocusEvent;
export declare type MaskedInputOnFocusParams = InputNameParams & InputValueParams & InputMaskedValueParams;
export declare type MaskedInputOnFocusCallback = (e: MaskedInputOnFocusEvent, params: MaskedInputOnFocusParams) => void;
