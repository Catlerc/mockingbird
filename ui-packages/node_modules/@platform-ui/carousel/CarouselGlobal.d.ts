import React from 'react';
import type { DataQaInterface } from '@platform-ui/dataQa';
import type { SliderProps } from './CarouselSlider';
export interface CarouselProps extends SliderProps, Pick<SliderProps, 'containerOverflow'> {
    /**
     * Атрибут data-qa-type
     */
    dataQaType: string;
    /**
     * Индекс текущего слайдера
     */
    activeIndex: number;
    /**
     * Флаг, включающий отображение стрелок
     */
    withControls?: boolean;
    /**
     * Флаг, включающий отображение счетчика слайдов
     */
    withCounter?: boolean;
    /**
     * Позволяет задавать кастомный компонент для счетчика слайдов
     */
    customCounter?: React.ComponentType<DataQaInterface & {
        currentSlideIndex: number;
        totalSlidesCount: number;
    }>;
    /**
     * Позволяет задавать кастомный компонент для стрелок
     */
    customControls: React.ComponentType<DataQaInterface & {
        carouselId: string;
        prevDisabled: boolean;
        nextDisabled: boolean;
        onNextClick: () => void;
        onPrevClick: () => void;
    }>;
    /**
     * Кастомный компонент для стрелки "Назад"
     */
    prevButton?: React.ReactElement;
    /**
     * Кастомный компонент для стрелки "Вперед"
     */
    nextButton?: React.ReactElement;
    /**
     * Сallback события смены слайда
     */
    setActive: (index: number) => void;
    /**
     * Количество слайдов перелистываемых за раз
     */
    slideStep?: number;
    /**
     * Автоматическое переключение слайдов
     */
    autoplay?: boolean;
    /**
     * Таймаут автоматического переключения слайдов
     */
    autoplayTimeout?: number;
    /**
     * Выбор скругления углов карусели
     */
    borderRadius?: React.CSSProperties['borderRadius'];
}
declare const Carousel: {
    (props: CarouselProps): JSX.Element;
    defaultProps: {
        activeIndex: number;
        children: never[];
        dataQaType: string;
        withControls: boolean;
        withCounter: boolean;
        customCounter: null;
        prevButton: null;
        nextButton: null;
        customControls: (props: import("./CarouselControlsGlobal").ControlsProps) => JSX.Element;
        setActive: () => void;
        startIndex: number;
        perPage: number;
        loop: boolean;
        slideStep: null;
        autoplay: boolean;
        autoplayTimeout: number;
        onDragEnd: () => void;
        hideInvisibleSlides: boolean;
        animateHiding: boolean;
        duration: number;
        easing: string;
        draggable: boolean;
        threshold: number;
        onSlide: import("@tinkoff/utils/typings/types").Func<void>;
        margin: number;
        stagePadding: number;
        autoHeight: boolean;
        elastic: boolean;
    };
};
export default Carousel;
