"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _dataQa = _interopRequireDefault(require("@platform-ui/dataQa"));

var _generateId = _interopRequireDefault(require("@platform-ui/generateId"));

var _CarouselSlider = _interopRequireDefault(require("./CarouselSlider"));

var _CarouselControlsGlobal = _interopRequireDefault(require("./CarouselControlsGlobal"));

var _CarouselModule = _interopRequireDefault(require("./Carousel.module.css"));

var _excluded = ["activeIndex", "autoplay", "autoplayTimeout", "children", "customControls", "customCounter", "dataQaType", "nextButton", "prevButton", "setActive", "withControls", "withCounter"];

var noop = function noop() {};

var Carousel = function Carousel(props) {
  var activeIndex = props.activeIndex,
      autoplay = props.autoplay,
      autoplayTimeout = props.autoplayTimeout,
      children = props.children,
      ControlsComponent = props.customControls,
      CounterComponent = props.customCounter,
      dataQaType = props.dataQaType,
      nextButton = props.nextButton,
      prevButton = props.prevButton,
      setActive = props.setActive,
      withControls = props.withControls,
      withCounter = props.withCounter,
      otherProps = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
  var sliderRef = (0, _react.useRef)(null);
  var carouselId = (0, _react.useRef)((0, _generateId.default)());
  var autoplayInterval = (0, _react.useRef)();

  var _useState = (0, _react.useState)(activeIndex),
      currentSlide = _useState[0],
      setCurrentSlide = _useState[1];

  var _useState2 = (0, _react.useState)(activeIndex),
      startIndex = _useState2[0],
      setStartIndex = _useState2[1];

  var _useState3 = (0, _react.useState)(false),
      hovered = _useState3[0],
      setHovered = _useState3[1];

  var handleNextClick = (0, _react.useCallback)(function () {
    var _sliderRef$current;

    (_sliderRef$current = sliderRef.current) == null ? void 0 : _sliderRef$current.next();
  }, []);
  var handlePrevClick = (0, _react.useCallback)(function () {
    var _sliderRef$current2;

    (_sliderRef$current2 = sliderRef.current) == null ? void 0 : _sliderRef$current2.prev();
  }, []);
  var handleSlide = (0, _react.useCallback)(function (index) {
    setCurrentSlide(index);
    setActive(index);
  }, [setActive]);
  var handleMouseOver = (0, _react.useCallback)(function () {
    setHovered(true);
  }, []);
  var handleMouseOut = (0, _react.useCallback)(function () {
    setHovered(false);
  }, []);
  var startAutoplay = (0, _react.useCallback)(function () {
    if (autoplayInterval.current !== undefined) {
      return;
    }

    autoplayInterval.current = window.setInterval(function () {
      var _sliderRef$current3;

      (_sliderRef$current3 = sliderRef.current) == null ? void 0 : _sliderRef$current3.next();
    }, autoplayTimeout);
  }, [autoplayTimeout]);
  var stopAutoplay = (0, _react.useCallback)(function () {
    if (autoplayInterval.current !== undefined) {
      clearInterval(autoplayInterval.current);
    }

    autoplayInterval.current = undefined;
  }, []);
  (0, _react.useEffect)(function () {
    if (activeIndex !== startIndex) {
      setStartIndex(activeIndex);
    }
  }, [activeIndex, startIndex]);
  (0, _react.useEffect)(function () {
    if (autoplay && !hovered) {
      startAutoplay();
    } else {
      stopAutoplay();
    }

    return function () {
      stopAutoplay();
    };
  }, [autoplay, hovered, startAutoplay, stopAutoplay]);

  var wrappedChildren = _react.default.Children.toArray(children);

  var isMultiPage = wrappedChildren.length > props.perPage;
  return /*#__PURE__*/_react.default.createElement("div", Object.assign({}, (0, _dataQa.default)({
    dataQaType: dataQaType
  }), {
    id: carouselId.current,
    className: _CarouselModule.default.carousel,
    onMouseEnter: autoplay ? handleMouseOver : undefined,
    onMouseLeave: autoplay ? handleMouseOut : undefined
  }), prevButton && isMultiPage && /*#__PURE__*/_react.default.cloneElement(prevButton, {
    disabled: !props.loop && currentSlide === 0,
    onClick: handlePrevClick
  }), /*#__PURE__*/_react.default.createElement(_CarouselSlider.default, Object.assign({}, otherProps, {
    dataQaType: dataQaType + ".slider",
    ref: sliderRef,
    startIndex: startIndex,
    onSlide: handleSlide,
    onDragEnd: props.onDragEnd
  }), wrappedChildren), nextButton && isMultiPage && /*#__PURE__*/_react.default.cloneElement(nextButton, {
    disabled: !props.loop && currentSlide >= wrappedChildren.length - props.perPage,
    onClick: handleNextClick
  }), withCounter && isMultiPage && CounterComponent && /*#__PURE__*/_react.default.createElement(CounterComponent, {
    dataQaType: dataQaType + ".counter",
    currentSlideIndex: currentSlide + 1,
    totalSlidesCount: wrappedChildren.length
  }), withControls && !(prevButton || nextButton) && isMultiPage && /*#__PURE__*/_react.default.createElement(ControlsComponent, {
    dataQaType: dataQaType + ".controls",
    carouselId: carouselId.current,
    prevDisabled: !props.loop && currentSlide === 0,
    nextDisabled: !props.loop && currentSlide >= wrappedChildren.length - props.perPage,
    onNextClick: handleNextClick,
    onPrevClick: handlePrevClick
  }));
};

Carousel.defaultProps = (0, _extends2.default)({}, _CarouselSlider.default.defaultProps, {
  activeIndex: 0,
  children: [],
  dataQaType: 'uikit/carousel',
  withControls: false,
  withCounter: false,
  customCounter: null,
  prevButton: null,
  nextButton: null,
  customControls: _CarouselControlsGlobal.default,
  setActive: noop,
  startIndex: 0,
  perPage: 1,
  loop: false,
  slideStep: null,
  autoplay: false,
  autoplayTimeout: 10000,
  onDragEnd: noop,
  hideInvisibleSlides: false,
  animateHiding: true
});
var _default = Carousel;
exports.default = _default;