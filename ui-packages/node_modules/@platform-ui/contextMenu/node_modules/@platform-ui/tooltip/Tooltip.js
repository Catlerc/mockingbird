"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

exports.__esModule = true;
exports.default = void 0;

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _generateId = _interopRequireDefault(require("@platform-ui/generateId"));

var _popover = _interopRequireDefault(require("@platform-ui/popover"));

var _TooltipBubble = _interopRequireDefault(require("./TooltipBubble/TooltipBubble"));

var _utils = require("./utils");

var _excluded = ["inline", "children", "withCorner", "theme", "popoverContent", "alignText", "overflow", "increasedTouchZone", "customPadding", "direction", "minArrowOffset", "hideOnTouchMove", "dataQaType", "cornerStyle", "pointerEvents", "portalTagName"];

var _this = void 0;

var Tooltip = function Tooltip(_ref) {
  var _ref$inline = _ref.inline,
      inline = _ref$inline === void 0 ? false : _ref$inline,
      children = _ref.children,
      _ref$withCorner = _ref.withCorner,
      withCorner = _ref$withCorner === void 0 ? true : _ref$withCorner,
      theme = _ref.theme,
      popoverContent = _ref.popoverContent,
      _ref$alignText = _ref.alignText,
      alignText = _ref$alignText === void 0 ? 'left' : _ref$alignText,
      _ref$overflow = _ref.overflow,
      overflow = _ref$overflow === void 0 ? 'visible' : _ref$overflow,
      _ref$increasedTouchZo = _ref.increasedTouchZone,
      increasedTouchZone = _ref$increasedTouchZo === void 0 ? false : _ref$increasedTouchZo,
      _ref$customPadding = _ref.customPadding,
      customPadding = _ref$customPadding === void 0 ? 7 : _ref$customPadding,
      _ref$direction = _ref.direction,
      directionProp = _ref$direction === void 0 ? 'bottom' : _ref$direction,
      _ref$minArrowOffset = _ref.minArrowOffset,
      minArrowOffset = _ref$minArrowOffset === void 0 ? 10 : _ref$minArrowOffset,
      _ref$hideOnTouchMove = _ref.hideOnTouchMove,
      hideOnTouchMove = _ref$hideOnTouchMove === void 0 ? true : _ref$hideOnTouchMove,
      _ref$dataQaType = _ref.dataQaType,
      dataQaType = _ref$dataQaType === void 0 ? 'uikit/tooltip' : _ref$dataQaType,
      propsCornerStyle = _ref.cornerStyle,
      pointerEvents = _ref.pointerEvents,
      _ref$portalTagName = _ref.portalTagName,
      portalTagName = _ref$portalTagName === void 0 ? 'span' : _ref$portalTagName,
      otherProps = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);

  var _useState = (0, _react.useState)('bottom'),
      direction = _useState[0],
      setDirection = _useState[1];

  var _useState2 = (0, _react.useState)({}),
      cornerStyle = _useState2[0],
      setCornerStyle = _useState2[1];

  var id = (0, _react.useRef)((0, _generateId.default)(_this));

  var handleActiveToggle = function handleActiveToggle(dir, cornStyle) {
    if (direction !== dir || !(0, _utils.equalStyles)(cornerStyle, cornStyle)) {
      setDirection(dir);
      setCornerStyle(cornStyle);
    }
  };

  var bubble = popoverContent && /*#__PURE__*/_react.default.createElement(_TooltipBubble.default, {
    dataQaType: dataQaType + ".bubble",
    inline: inline,
    withCorner: withCorner,
    direction: direction,
    cornerStyle: propsCornerStyle || cornerStyle,
    theme: theme,
    alignText: alignText,
    id: id.current,
    overflow: overflow
  }, popoverContent);

  return /*#__PURE__*/_react.default.createElement(_popover.default, Object.assign({
    popoverBlock: bubble,
    onActiveToggle: handleActiveToggle,
    increasedTouchZone: increasedTouchZone,
    customPadding: customPadding,
    direction: directionProp,
    minArrowOffset: minArrowOffset,
    hideOnTouchMove: hideOnTouchMove
  }, otherProps, {
    role: "tooltip",
    dataQaType: dataQaType,
    ariaDescribedBy: id.current,
    blockStyles: {
      pointerEvents: pointerEvents
    },
    portalTagName: portalTagName
  }), children);
};

var _default = Tooltip;
exports.default = _default;